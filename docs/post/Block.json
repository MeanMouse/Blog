{"title": "Block \u63a2\u7a76", "date": "2018-11-28 14:37:57", "categories": "iOS", "tags": "block", "keywords": "block,block\u53d8\u91cf,__block,\u5faa\u73af\u5f15\u7528,block\u7684\u5b9e\u73b0,block\u7684\u672c\u8d28", "description": "", "file_name": "Block", "short": " \n Block\u662fOSX Snow Leopard\u548ciOS 4\u5f15\u5165\u7684C\u8bed\u8a00\u6269\u5145\u529f\u80fd\uff0c\u662f\u4e00\u4e2a\u5e26\u6709\u81ea\u52a8\u53d8\u91cf\uff08\u5c40\u90e8\u53d8\u91cf\uff09\u7684\u533f\u540d\u51fd\u6570\uff0c\u4e5f\u88ab\u79f0\u4e3a\u95ed\u5305\u3002 \n \n Block\u8bed\u6cd5 \n Block\u7684\u8868\u8fbe\u5f0f\u8bed\u6cd5 \n      ^     \u8fd4\u56de\u503c\u7c7b\u578b     \u53c2\u6570\u5217\u8868     \u8868\u8fbe\u5f0f   \n ^     int     (  int     count  )     {     return     count     +     1  ;     }   \n\n // \u53ef\u7701\u7565\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e2d\u6709\u8fd4\u56de\u503c\u5c31\u4f7f\u7528\u8fd4\u56de\u503c\u7684\u7c7b\u578b \n ^  (  int     count  )     {     return     count     +     1  ;     }   \n\n // \u5982\u679c\u6ca1\u6709\u53c2\u6570\uff0c\u53c2\u6570\u5217\u8868\u4e5f\u53ef\u4ee5\u7701\u7565 \n ^  {     printf  (  \"hello Blocks  \\n  \"  );     }   \n   \n\n ", "content": "<blockquote>\n<p>Block\u662fOSX Snow Leopard\u548ciOS 4\u5f15\u5165\u7684C\u8bed\u8a00\u6269\u5145\u529f\u80fd\uff0c\u662f\u4e00\u4e2a\u5e26\u6709\u81ea\u52a8\u53d8\u91cf\uff08\u5c40\u90e8\u53d8\u91cf\uff09\u7684\u533f\u540d\u51fd\u6570\uff0c\u4e5f\u88ab\u79f0\u4e3a\u95ed\u5305\u3002</p>\n</blockquote>\n<h3 id=\"block\">Block\u8bed\u6cd5</h3>\n<h4 id=\"block_1\">Block\u7684\u8868\u8fbe\u5f0f\u8bed\u6cd5</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">\u8fd4\u56de\u503c\u7c7b\u578b</span><span class=\"w\"> </span><span class=\"n\">\u53c2\u6570\u5217\u8868</span><span class=\"w\"> </span><span class=\"n\">\u8868\u8fbe\u5f0f</span><span class=\"w\"></span>\n<span class=\"o\">^</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u53ef\u7701\u7565\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e2d\u6709\u8fd4\u56de\u503c\u5c31\u4f7f\u7528\u8fd4\u56de\u503c\u7684\u7c7b\u578b</span>\n<span class=\"o\">^</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u5982\u679c\u6ca1\u6709\u53c2\u6570\uff0c\u53c2\u6570\u5217\u8868\u4e5f\u53ef\u4ee5\u7701\u7565</span>\n<span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;hello Blocks</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<!-- more -->\n<h4 id=\"block_2\">Block \u7c7b\u578b\u53d8\u91cf</h4>\n<p>Block\u7c7b\u578b\u53d8\u91cf\u4e0e\u4e00\u822c\u7684C\u8bed\u8a00\u53d8\u91cf\u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u4f5c\u4e3a\uff1a\u81ea\u52a8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u3001\u9759\u6001\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u3002</p>\n<p>\u58f0\u660eBlock\u7c7b\u578b\u53d8\u91cf\u7684\u65b9\u5f0f</p>\n<ul>\n<li>\u4f7f\u7528Block\u8bed\u6cd5\u5c06Block\u8d4b\u503c\u4e3aBlock\u7c7b\u578b\u53d8\u91cf</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">\u8fd4\u56de\u503c</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">\u53d8\u91cf\u540d</span><span class=\"p\">)(</span><span class=\"n\">\u53c2\u6570\u5217\u8868</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"n\">\u53c2\u6570\u5217\u8868</span><span class=\"w\"> </span><span class=\"n\">\u8868\u8fbe\u5f0f</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<ul>\n<li>\u4f7f\u7528typedef\u6765\u58f0\u660eBlock\u7c7b\u578b\u53d8\u91cf</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u5b9a\u4e49Block\u7c7b\u578b</span>\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"n\">\u8fd4\u56de\u503c</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">\u53d8\u91cf\u540d</span><span class=\"p\">)(</span><span class=\"n\">\u53c2\u6570\u5217\u8868</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block_t</span><span class=\"p\">)(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"c1\">// \u58f0\u660eblock_t\u7c7b\u578b\u7684Block\u53d8\u91cf</span>\n<span class=\"n\">block_t</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n<h3 id=\"block_3\">Block\u7684\u5b9e\u73b0\u4e0e\u672c\u8d28</h3>\n<p>Blcok\u8bed\u6cd5\u5b9e\u9645\u4e0a\u662f\u4f5c\u4e3a\u6781\u666e\u901a\u7684C\u8bed\u8a00\u6e90\u4ee3\u7801\u6765\u5904\u7406\u7684\uff0c\u53ef\u4ee5\u5728shell\u4e2d\u901a\u8fc7clang\u547d\u4ee4\u5c06OC\u6587\u4ef6\u8f6c\u6362\u4e3a\u6e90\u7801\u6587\u4ef6\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code>clang -rewrite-objc \u6587\u4ef6\u540d\n</code></pre></div>\n\n<p>\u5c06\u4ee5\u4e0bBlock\u8bed\u6cd5\u8f6c\u6362\u4e3a\u6e90\u4ee3\u7801\u5f62\u5f0f</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">@autoreleasepool</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;hello block!&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"n\">block</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u6e90\u7801\u4e3a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// Block\u7684\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u4fe1\u606f</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__block_impl</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">isa</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">Flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">Reserved</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">FuncPtr</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// Block\u7684\u7ed3\u6784\u4f53\u5b9e\u4f8b</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// \u7ed3\u6784\u4f53\u5b9e\u4f8b\u6210\u5458\u53d8\u91cf\u4fe1\u606f\uff1a\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7c7b\u578b\u3001\u51fd\u6570\u7b49</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__block_impl</span><span class=\"w\"> </span><span class=\"n\">impl</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"c1\">// \u7ed3\u6784\u4f53\u5b9e\u4f8b\u4fe1\u606f\uff1a\u533a\u57df\u548c\u5927\u5c0f</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"c1\">// __main_block_impl_0\u7ed3\u6784\u4f53\u7684\u6784\u9020\u65b9\u6cd5</span>\n<span class=\"c1\">// \u7b2c\u4e00\u4e2a\u53c2\u6570 __main_block_func_0 \u662fblock\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\u90e8\u5206\u8f6c\u6362\u7684C\u8bed\u8a00\u51fd\u6570\u6307\u9488</span>\n<span class=\"c1\">// </span>\n<span class=\"n\">__main_block_impl_0</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">desc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// \u5b9e\u4f8b\u7c7b\u578b\u540d</span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_NSConcreteStackBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">Flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"c1\">// block\u7684\u8868\u8fbe\u5f0f\u51fd\u6570</span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">FuncPtr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">Desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"cm\">/*</span>\n\n<span class=\"cm\">* __main_block_func_0\u51fd\u6570 \u662f\u7684Block\u5b9e\u4f8b\u7684\u8868\u8fbe\u5f0f\u90e8\u5206\u8f6c\u6362\u7684C\u8bed\u8a00\u51fd\u6570</span>\n<span class=\"cm\">* __cself\u662f\u6307\u5411Blcok\u5bf9\u8c61\u81ea\u8eab\u7684\u53d8\u91cf\uff0c\u5c31\u50cfObjective-C\u4e2d\u7684self</span>\n<span class=\"cm\">**/</span><span class=\"w\"></span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_func_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__cself</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;hello block!&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u5176\u63cf\u8ff0\u7684\u662f __main_block_impl_0\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u533a\u57df\u548c\u5927\u5c0f</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">reserved</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">Block_size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"p\">)};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// main.m\u6587\u4ef6</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"cm\">/* @autoreleasepool */</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">__AtAutoreleasePool</span><span class=\"w\"> </span><span class=\"n\">__autoreleasepool</span><span class=\"p\">;</span><span class=\"w\"> </span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)())</span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u8ddf\u7740\u4ee3\u7801\u6267\u884c\u6d41\u7a0b\u8d70\uff0c\u9996\u5148\u6267\u884c</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;hello block!&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4e0b\u9762\u6e90\u4ee3\u7801\u5c06\u5728\u6808\u4e0a__main_block_impl_0 \u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u6307\u9488\u8d4b\u503c\u7ed9 __main_block_impl_0 \u7ed3\u6784\u4f53\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfblock\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)())</span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u53bb\u6389\u7c7b\u578b\u8f6c\u6362</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">(</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">tmp</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>__main_block_impl_0 \u6784\u9020\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 __main_block_func_0 \u662fblock\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\u90e8\u5206\u8f6c\u6362\u7684C\u8bed\u8a00\u51fd\u6570\u6307\u9488\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 __main_block_desc_0_DATA\u4e2d\u5b58\u50a8\u7740 __main_block_impl_0 \u7ed3\u6784\u4f53\u5b9e\u4f8b\u5927\u5c0f\u3002</p>\n<p>\u58f0\u660e\u597d\u4e86block\u53d8\u91cf\uff0c\u5c31\u5230\u4e86\u4e0b\u4e00\u6b65\uff0c\u4f7f\u7528block\uff1ablock()</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u53bb\u6389\u7c7b\u578b\u8f6c\u6362</span>\n<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)(</span><span class=\"n\">block</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u6b64\u6b65\u9aa4\u5c31\u662f\u7b80\u5355\u7684\u4f7f\u7528\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570\uff0c\u6240\u8c03\u7528\u7684\u51fd\u6570\u5c31\u662f\u4e0a\u9762\u6e90\u7801\u7684 __main_block_func_0 \u51fd\u6570\u3002</p>\n<p>\u603b\u7ed3\uff1a\u7531\u4e0a\u53ef\u77e5Block\u5b9e\u8d28\u5c31\u662fObjective-C\u7684\u5bf9\u8c61\u3002</p>\n<h3 id=\"block_4\">Block\u6355\u83b7\u81ea\u52a8\u53d8\u91cf</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"n\">block</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4e0a\u9762\u7684\u793a\u4f8b\u7684\u7ed3\u679c\u662f\uff1aval = 10\uff0c\u7531\u4e8eBlock\u6355\u83b7\u7684\u662fval\u7684\u503c\uff0c\u6240\u4ee5\u5916\u90e8val\u53d8\u91cf\u7684\u6539\u52a8\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230Block\u4e2d\u7684val\u53d8\u91cf\uff0c\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u5728Block\u4e2d\u6539\u53d8val\u7684\u503c\uff0c\u7531\u4e8eBlcok\u6355\u83b7\u7684\u662fval\u53d8\u91cf\u7684\u503c\u800c\u4e0d\u662f\u5730\u5740\uff0c\u6240\u4ee5\u5728Block\u4e2d\u65e0\u6cd5\u4fee\u6539\u81ea\u52a8\u53d8\u91cfval\u7684\u503c\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u8fd9\u4e00\u70b9\u5728\u4e0b\u8282\u7684\u201cBlock \u662f\u5982\u4f55\u6355\u83b7\u81ea\u52a8\u53d8\u91cf\u201d\u53ef\u660e\u767d\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u5982\u679c\u6211\u4eec\u53ea\u4f7f\u503c\u7684\u8bdd\u5c31\u4e0d\u4f1a\u6709\u4efb\u4f55\u95ee\u9898</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">multArray</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"bp\">NSMutableArray</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"> </span>\n<span class=\"p\">[</span><span class=\"n\">multArray</span><span class=\"w\"> </span><span class=\"n\">addObject</span><span class=\"o\">:</span><span class=\"s\">@&quot;use is ok&quot;</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u5f53\u7136\u4e5f\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u5f53\u6211\u4eec\u5728Block\u4e2d\u53ea\u4f7f\u7528C\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u53d8\u91cf\u6570\u7ec4\u65f6\uff0c\u7531\u4e8eBlock\u6355\u83b7\u81ea\u52a8\u53d8\u91cf\u7684\u65b9\u6cd5\u6ca1\u6709\u5b9e\u73b0\u5bf9C\u8bed\u8a00\u6570\u7ec4\u7684\u622a\u83b7\uff0c\u6240\u4ee5\u5728Block\u4e2d\u4f7f\u7528C\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u53d8\u91cf\u6570\u7ec4\u4f1a\u51fa\u9519\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">text</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;hello&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;%c</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"n\">text</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u8be5\u7528\u6b64\u505a\u6cd5\u5c31\u80fd\u89e3\u51b3\u95ee\u9898</span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;hello&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;%c</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"n\">text</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<h3 id=\"block_5\">Block \u662f\u5982\u4f55\u6355\u83b7\u81ea\u52a8\u53d8\u91cf</h3>\n<p>\u5c06\u6355\u83b7\u81ea\u52a8\u53d8\u91cf\u7684\u4ee3\u7801\u8f6c\u6362\u4e3a\u6e90\u4ee3\u7801</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">@autoreleasepool</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"n\">block</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u6e90\u7801\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__block_impl</span><span class=\"w\"> </span><span class=\"n\">impl</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"n\">__main_block_impl_0</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">desc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">(</span><span class=\"n\">_val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_NSConcreteStackBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">Flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">FuncPtr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">Desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_func_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__cself</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by copy</span>\n\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">reserved</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">Block_size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"p\">)};</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"cm\">/* @autoreleasepool */</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">__AtAutoreleasePool</span><span class=\"w\"> </span><span class=\"n\">__autoreleasepool</span><span class=\"p\">;</span><span class=\"w\"> </span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)())</span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u77e5\u9053\uff0cBlock\u5c06\u5728\u8868\u8fbe\u5f0f\u4e2d\u7528\u5230\u7684val\u81ea\u52a8\u53d8\u91cf\u4f5c\u4e3a\u6210\u5458\u53d8\u91cf\u8ffd\u52a0\u5230 __main_block_impl_0 \u7ed3\u6784\u4f53\u4e2d</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__block_impl</span><span class=\"w\"> </span><span class=\"n\">impl</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u8ddf\u7740\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u6e90\u7801\uff1a</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)())</span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">));</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u5b9a\u4e49 val\u53d8\u91cf\u5e76\u8d4b\u4e88\u521d\u59cb\u503c10\uff0c\u5c06val\u503c\u901a\u8fc7 __main_block_impl_0 \u7684\u6784\u9020\u65b9\u6cd5\u5bf9__main_block_impl_0\u8ffd\u52a0\u7684val\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// __main_block_impl_0 \u521d\u59cb\u5316</span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_NSConcreteStackBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">Flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">FuncPtr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__main_block_func_0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">Desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4f7f\u7528block\uff1ablock()\uff0c\u4e5f\u5c31\u662f\u6267\u884c</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">\u6e90\u7801</span><span class=\"err\">\uff1a</span><span class=\"w\"></span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">__main_block_func_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__cself</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by copy</span>\n\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;val = %d&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u5728\u6267\u884cblock\u7684\u8868\u8fbe\u5f0f\u65f6\uff0c\u7528\u7684val\u81ea\u52a8\u53d8\u91cf\uff0c\u662f\u7ed3\u6784\u4f53\u8ffd\u52a0\u7684val\u81ea\u52a8\u53d8\u91cf\uff0c\u6240\u4ee5Block\u6355\u83b7\u81ea\u52a8\u53d8\u91cf\u5e76\u4e0d\u662f\u771f\u7684\u5c06\u53d8\u91cf\u76f4\u63a5\u4f5c\u4e3a\u6210\u5458\u53d8\u91cf\uff0c\u800c\u662f\u5728\u7ed3\u6784\u4f53\u4e2d\u8ffd\u52a0\u4e00\u4e2a\u540d\u5b57\u76f8\u540c\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u5c06\u8981\u6355\u83b7\u7684\u81ea\u52a8\u53d8\u91cf\u503c\u5bf9\u8ffd\u52a0\u7684\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u3002</p>\n<h3 id=\"__block\">__block \u8bf4\u660e\u7b26</h3>\n<p>\u5728\u6b64\u4e4b\u524d\u8bd5\u56fe\u5728block\u8868\u8fbe\u5f0f\u4e2d\u6539\u53d8\u6355\u83b7\u7684\u81ea\u52a8\u53d8\u91cf\u7684\u503c\u65f6\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u89e3\u51b3\u65b9\u6848\u6709\uff1a</p>\n<ul>\n<li>\u7528__block \u8bf4\u660e\u7b26\u4fee\u9970\u81ea\u52a8\u53d8\u91cf</li>\n<li>\u9759\u6001\u53d8\u91cf</li>\n<li>\u9759\u6001\u5168\u5c40\u53d8\u91cf</li>\n<li>\u5168\u5c40\u53d8\u91cf</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">static_global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">@autoreleasepool</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">static_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">__block</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">static_global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">static_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"n\">block</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;global_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">global_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;static_global_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">static_global_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;static_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">static_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;block_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u7ed3\u679c\uff1a</span>\n<span class=\"nl\">global_val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span>\n<span class=\"nl\">static_global_val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span>\n<span class=\"nl\">static_val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span>\n<span class=\"nl\">block_val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span>\n</code></pre></div>\n\n<p>\u8f6c\u6362\u7684\u6e90\u7801\u4e3a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">static_global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__isa</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__forwarding</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">__flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">__size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__block_impl</span><span class=\"w\"> </span><span class=\"n\">impl</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">static_val</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">block_val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// by ref</span>\n\n<span class=\"n\">__main_block_impl_0</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">desc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">_static_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">_block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">static_val</span><span class=\"p\">(</span><span class=\"n\">_static_val</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"p\">(</span><span class=\"n\">_block_val</span><span class=\"o\">-&gt;</span><span class=\"n\">__forwarding</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_NSConcreteStackBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">Flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">FuncPtr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">Desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_func_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__cself</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by ref</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">static_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">static_val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by copy</span>\n\n<span class=\"n\">global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">static_global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">static_val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">block_val</span><span class=\"o\">-&gt;</span><span class=\"n\">__forwarding</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_copy_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">dst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">src</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">_Block_object_assign</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">dst</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">src</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"cm\">/*BLOCK_FIELD_IS_BYREF*/</span><span class=\"p\">);}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_dispose_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">src</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">_Block_object_dispose</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">src</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"cm\">/*BLOCK_FIELD_IS_BYREF*/</span><span class=\"p\">);}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">reserved</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">Block_size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">copy</span><span class=\"p\">)(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">dispose</span><span class=\"p\">)(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">__main_block_copy_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">__main_block_dispose_0</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"cm\">/* @autoreleasepool */</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">__AtAutoreleasePool</span><span class=\"w\"> </span><span class=\"n\">__autoreleasepool</span><span class=\"p\">;</span><span class=\"w\"> </span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">static_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"bp\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">__blocks__</span><span class=\"p\">(</span><span class=\"n\">byref</span><span class=\"p\">)))</span><span class=\"w\"> </span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{(</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"mi\">0</span><span class=\"p\">,(</span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)())</span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">static_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">570425344</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;global_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">global_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;static_global_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">static_global_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;static_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">static_val</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;block_val: %d </span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">block_val</span><span class=\"p\">.</span><span class=\"n\">__forwarding</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4ee5\u4e0b\u662f\u5bf9\u56db\u79cd\u53d8\u91cf\u6539\u53d8\u503c\u7684\u8868\u8fbe\u5f0f\u51fd\u6570</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_func_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__cself</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by ref</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">static_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">static_val</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by copy</span>\n\n<span class=\"n\">global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">static_global_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">static_val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">block_val</span><span class=\"o\">-&gt;</span><span class=\"n\">__forwarding</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Block\u4ec5\u6355\u83b7\u4e86 block_val\u4fee\u9970\u7684\u53d8\u91cf\u548cstaic_val\uff0c\u5168\u5c40\u53d8\u91cf\u6ca1\u6709\u6355\u83b7\uff0c\u539f\u56e0\u662fblock_val\u3001staic_val\u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u4f5c\u7528\u57df\u4ec5\u5728 main \u65b9\u6cd5\u4e2d\uff0c\u5f53\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u53d8\u91cf\u4f1a\u88ab\u5e9f\u5f03\uff0c\u6240\u4ee5Block\u9700\u6355\u83b7block_val\u3001staic_val\u53d8\u91cf\u4ee5\u4fdd\u8bc1\u5728\u8868\u8fbe\u5f0f\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u7136\u800c\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5f88\u5e7f\uff0c\u6240\u4ee5Block\u65e0\u9700\u6355\u83b7\uff0c\u6240\u4ee5\u770b\u51faBlock\u53ea\u5bf9\u9700\u8981\u6355\u83b7\u7684\u53d8\u91cf\u8fdb\u884c\u6355\u83b7\u3002</p>\n<p>\u5bf9\u4e8e\u5168\u5c40\u53d8\u91cf\u80fd\u5728Block\u4e2d\u4fee\u6539\u503c\uff0c\u5982\u4e0a\u9762\u8bf4\u7684\uff0c\u5b83\u4f5c\u7528\u57df\u5f88\u5e7f\uff0c\u6240\u4ee5\u5728Block\u8868\u8fbe\u5f0f\u51fd\u6570\u7ed3\u675f\u540e\u4e5f\u80fd\u4fdd\u5b58\u4fee\u6539\u7684\u503c\u3002\u9759\u6001\u53d8\u91cfstatic_val\u662f\u5c06\u5176\u6307\u9488\u4f20\u9012\u7ed9 __main_block_impl_0 \u7ed3\u6784\u4f53\u7684\u6784\u9020\u51fd\u6570\u5e76\u4fdd\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4Block\u6355\u83b7\u7684\u5e76\u4e0d\u662f static_val\u7684\u503c\uff0c\u800c\u662f\u5176\u6307\u9488\uff08\u5373\u5185\u5b58\u5730\u5740\uff09\uff0c\u6240\u4ee5static_val\u80fd\u591f\u5728\u8d85\u51fa\u4f5c\u7528\u57df\u4e4b\u5916\u4f7f\u7528\uff0c\u5728Block\u7ed3\u675f\u540e\u4e5f\u80fd\u4fdd\u5b58\u4fee\u6539\u540e\u7684\u503c\u3002</p>\n<p>\u6700\u540e\u5c31\u662fblock_val\u53d8\u91cf\u4e86\uff0cblock_val \u662f\u4f7f\u7528__block \u8bf4\u660e\u7b26\u4fee\u9970\u7684\u53d8\u91cf\uff0c\u201c__block \u8bf4\u660e\u7b26\u201d\u4e5f\u88ab\u79f0\u4e3a\u201c__block \u5b58\u50a8\u57df\u7c7b\u8bf4\u660e\u7b26\u201d\uff0cblock_val\u5728\u6dfb\u52a0\u4e0a\u201c__block \u8bf4\u660e\u7b26\u201d\u540e\uff0c\u6e90\u7801\u53d8\u6362\u5982\u4e0b</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">__block</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u8f6c\u6362\u540e\u7684\u6e90\u7801\uff1a</span>\n<span class=\"bp\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">__blocks__</span><span class=\"p\">(</span><span class=\"n\">byref</span><span class=\"p\">)))</span><span class=\"w\"> </span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{(</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"mi\">0</span><span class=\"p\">,(</span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"c1\">//\u53bb\u6389\u7c7b\u578b\u8f6c\u6362\u540e\uff1a</span>\n<span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">block_val</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">__Block_byref_block_val_0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// __Block_byref_block_val_0 \u7ed3\u6784\u4f53</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__isa</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__forwarding</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">__flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">__size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">block_val</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u5728\u6dfb\u52a0\u4e0a\u201c__block \u8bf4\u660e\u7b26\u201d\u540e\uff0cblock_val\u53d8\u6210\u4e86 __Block_byref_block_val_0 \u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u81ea\u52a8\u53d8\u91cf\uff0c\u5e76\u4e14\u5176\u7ed3\u6784\u4f53\u4e2d\u542b\u6709\u4e00\u4e2a\u76f8\u5f53\u4e8e\u539f\u81ea\u52a8\u53d8\u91cfblock_val\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5f53\u5bf9block_val\u53d8\u91cf\u8d4b\u503c\u65f6</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">__Block_byref_block_val_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">block_val</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">;</span><span class=\"w\"> </span>\n\n<span class=\"p\">(</span><span class=\"n\">block_val</span><span class=\"o\">-&gt;</span><span class=\"n\">__forwarding</span><span class=\"o\">-&gt;</span><span class=\"n\">block_val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Blcok\u7684 __main_block_impl_0 \u7ed3\u6784\u4f53\u5b9e\u4f8b\u6301\u6709\u6307\u5411 block_val\u53d8\u91cf\u7684__Block_byref_block_val_0 \u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u6307\u9488\uff0c\u800c__Block_byref_block_val_0 \u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u6210\u5458\u53d8\u91cf __forwarding \u6301\u6709\u6c38\u8fdc\u6307\u5411\u81ea\u8eab\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u901a\u8fc7 __forwarding\u6765\u8bbf\u95ee\u6210\u5458\u53d8\u91cf block_val\uff0c\u56e0\u6b64\u5728Block\u7ed3\u675f\u540e\uff0cblock_val\u53d8\u91cf\u80fd\u4fdd\u5b58\u6539\u52a8\u540e\u7684\u503c\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u7591\u95ee\uff1ablock_val\u8d85\u51fa\u4e86block\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5e76\u4e14\u5b83\u662f\u914d\u7f6e\u5728\u6808\u4e0a\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u80fd\u8bbf\u95ee\uff1f\u8fd9\u4e2a\u95ee\u9898\u5728\u4e0b\u8282\u201cBlock\u53d8\u91cf\u548c__block\u53d8\u91cf\u5b58\u50a8\u57df\u201d\u53ef\u4ee5\u660e\u767d\u3002</p>\n<p>\u603b\u7ed3\uff1a\u8981\u5728Blcok\u4e2d\u6539\u53d8\u88ab\u6355\u83b7\u7684\u81ea\u52a8\u53d8\u91cf\u7684\u503c\u7684\u65b9\u5f0f\u6709\uff1a</p>\n<ul>\n<li>\u4ee5\u6307\u9488\uff08\u5185\u5b58\u5730\u5740\uff09\u5f62\u5f0f\u88abBlock\u6355\u83b7\uff0cBlock\u4fdd\u5b58\u5176\u6307\u9488\u540e\uff0c\u5bf9\u4e8e\u5185\u5bb9\u7684\u66f4\u6539\u4fbf\u4e0d\u4f1a\u4e22\u5931</li>\n<li>\u6539\u53d8\u81ea\u52a8\u53d8\u91cf\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u5982__block\uff0c __Block_byref_block_val_0\u7ed3\u6784\u4f53\u5b9e\u4f8b\u4e2d\u62e5\u6709\u76f8\u5f53\u4e8e\u539f\u81ea\u52a8\u53d8\u91cf\u7684\u6210\u5458\u53d8\u91cf\u5e76\u62e5\u6709\u6c38\u8fdc\u6307\u5411\u81ea\u5df1\u7684\u6307\u9488\u7684\u6210\u5458\u53d8\u91cf__forwarding\uff0c\u4e0d\u8fc7\u53d8\u91cf\u5728\u6808\u4e0a\u8fd8\u662f\u5806\u4e0a\u90fd\u80fd\u8bbf\u95ee\u3002</li>\n</ul>\n<h3 id=\"block__block\">Block\u53d8\u91cf\u548c__block\u53d8\u91cf\u5b58\u50a8\u57df</h3>\n<p>\u4e0a\u9762\u6240\u8ff0\u53ef\u77e5\uff0cBlock\u7c7b\u578b\u53d8\u91cf\u8f6c\u6362\u4e3a __main_block_impl_0 \u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u91cf\uff0c__block \u53d8\u91cf\u8f6c\u6362\u4e3a __Block_byref_block_val_0\u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u91cf\uff0c\u6240\u8c13\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u91cf\u5373\u6808\u4e0a\u751f\u6210\u7684\u7ed3\u6784\u4f53\u5b9e\u4f8b\u3002</p>\n<p>Block\u5b9e\u8d28\u5c31\u662fObjective-C\u5bf9\u8c61\uff0c\u5b83\u6709\u4e09\u79cd\u7c7b\u578b\uff1a_NSConcreteStackBlock\u3001_NSConcreteGlobalBlock\u3001_NSConcreteMallocBlock\u3002</p>\n<ul>\n<li>_NSConcreteStackBlock\uff1a<br />\n\u5b83\u662f\u5728\u6808\u4e0a\u7684Block\u7c7b\u578b\uff0c\u53ea\u7528\u5230\u5916\u90e8\u5c40\u90e8\u53d8\u91cf\u3001\u6210\u5458\u5c5e\u6027\u53d8\u91cf\uff0c\u6ca1\u6709\u5f3a\u6307\u9488\u5f15\u7528\uff0c\u4e00\u65e6\u8131\u79bb\u4f5c\u7528\u57df\u65f6\u5c31\u4f1a\u88ab\u9500\u6bc1\u3002</li>\n<li>_NSConcreteGlobalBlock\uff1a<br />\n\u5b83\u662f\u5728\u6570\u636e\u533a\u57df\uff08.data\u533a\uff09\u7684Block\u7c7b\u578b\uff0c\u53ea\u7528\u5230\u6ca1\u6709\u7528\u5230\u5916\u754c\u53d8\u91cf\u6216\u53ea\u7528\u5230\u5168\u5c40\u53d8\u91cf\u7684block\uff0c\u53ea\u6709\u5728\u5e94\u7528\u7a0b\u5e8f\u7ed3\u675f\u624d\u4f1a\u88ab\u9500\u6bc1\u3002</li>\n<li>_NSConcreteMallocBlock<br />\n\u5b83\u662f\u5728\u5806\uff08\u5185\u5b58\u5757\uff09\u91cc\u7684Block\u7c7b\u578b\uff0c\u6709\u5f3a\u6307\u9488\u5f15\u7528\u6216copy\u4fee\u9970\u7684\u6210\u5458\u5c5e\u6027\u5f15\u7528\uff0c\u6ca1\u6709\u5f3a\u6307\u9488\u5f15\u7528\u5373\u9500\u6bc1\u3002</li>\n</ul>\n<p><img alt=\"image\" src=\"/postImage/Block/psb.png\" /></p>\n<p>_NSConcreteGlobalBlock \u7c7b\u578bBlock\u53d8\u91cf\u5728\u8d85\u51fa\u4f5c\u7528\u57df\u4e5f\u80fd\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\uff0c\u800c_NSConcreteStackBlock\u7c7b\u578bBlock\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u540e\u5c31\u4f1a\u88ab\u5e9f\u5f03\uff0c\u540c\u6837\u7684 __block \u7c7b\u578b\u53d8\u91cf\u4e5f\u662f\u5982\u6b64\uff0c\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cBlock\u8bed\u6cd5\u63d0\u4f9b\u4e86\u5c06Block \u548c __block\u53d8\u91cf\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4e0a\uff0c\u8fd9\u6837\u5728Block\u53d8\u91cf\u4f5c\u7528\u57df\u7ed3\u675f\u540e\uff0c\u5806\u4e0a\u7684Block\u8fd8\u80fd\u7ee7\u7eed\u5b58\u5728\u3002\u590d\u5236\u5728\u5806\u4e0a\u7684Block\u4f1a\u5c06 _NSConcreteMallocBlock \u7c7b\u540d\u5199\u5165Block \u7ed3\u6784\u4f53\u5b9e\u4f8b __main_block_impl_0 \u4e2d\u7684\u6210\u5458\u53d8\u91cf ipml \u7684isa\u53d8\u91cf\u4e2d\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">ipml</span><span class=\"p\">.</span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_NSConcreteMallocBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u800c __block \u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u6210\u5458\u53d8\u91cf __forwarding \u62e5\u6709\u6c38\u8fdc\u6307\u5411\u81ea\u8eab\u7684\u6307\u9488\uff0c \u53ef\u4ee5\u5b9e\u73b0\u65e0\u8bba __block \u53d8\u91cf\u914d\u7f6e\u5728\u6808\u4e0a\u8fd8\u662f\u5806\u4e0a\u4e5f\u53ef\u4ee5\u8bbf\u95ee __block\u53d8\u91cf\uff0c\u56e0\u6b64\u5373\u4f7f__block\u53d8\u91cf\u5728Block\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4e4b\u5916\u4e5f\u80fd\u8bbf\u95ee__block\u53d8\u91cf\u5e76\u4fdd\u5b58\u66f4\u6539\u540e\u7684\u503c\u3002</p>\n<h3 id=\"block-copydispose\">Block \u7684copy\u65b9\u6cd5\u548cdispose\u65b9\u6cd5</h3>\n<p>\u8fd9\u662f\u5728MRC\u73af\u5883\u4e0b\u7684\u4ee3\u7801\u793a\u4f8b</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">block_t</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">@autoreleasepool</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"bp\">NSMutableArray</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"n\">block_t</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">^</span><span class=\"p\">(</span><span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">obj</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"p\">[</span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"n\">addObject</span><span class=\"o\">:</span><span class=\"n\">obj</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;array count = %ld&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">copy</span><span class=\"p\">];</span><span class=\"w\"></span>\n\n<span class=\"n\">block</span><span class=\"p\">([[</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"n\">block</span><span class=\"p\">([[</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"n\">block</span><span class=\"p\">([[</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// clang\u540e\u7684\u6e90\u7801\uff1a</span>\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">block_t</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__block_impl</span><span class=\"w\"> </span><span class=\"n\">impl</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">__main_block_impl_0</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">desc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">_array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">_array</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_NSConcreteStackBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">Flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">impl</span><span class=\"p\">.</span><span class=\"n\">FuncPtr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">Desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">desc</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_func_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">__cself</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">obj</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">__cself</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// bound by copy</span>\n\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ObjectType</span><span class=\"w\"> </span><span class=\"n\">_Nonnull</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;addObject:&quot;</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">obj</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">NSLog</span><span class=\"p\">((</span><span class=\"bp\">NSString</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">__NSConstantStringImpl__var_folders_2k_lvtjwq3x1h746y288_mm11200000gn_T_main_580dfd_mi_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">NSUInteger</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;count&quot;</span><span class=\"p\">)));</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_copy_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">dst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">src</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">_Block_object_assign</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">dst</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">src</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"cm\">/*BLOCK_FIELD_IS_OBJECT*/</span><span class=\"p\">);}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_dispose_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">src</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">_Block_object_dispose</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">src</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"cm\">/*BLOCK_FIELD_IS_OBJECT*/</span><span class=\"p\">);}</span><span class=\"w\"></span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">reserved</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">Block_size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">copy</span><span class=\"p\">)(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">dispose</span><span class=\"p\">)(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">__main_block_copy_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">__main_block_dispose_0</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"cm\">/* @autoreleasepool */</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">__AtAutoreleasePool</span><span class=\"w\"> </span><span class=\"n\">__autoreleasepool</span><span class=\"p\">;</span><span class=\"w\"> </span>\n\n<span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"bp\">NSMutableArray</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)((</span><span class=\"bp\">NSMutableArray</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">objc_getClass</span><span class=\"p\">(</span><span class=\"s\">&quot;NSMutableArray&quot;</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;alloc&quot;</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;init&quot;</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"n\">block_t</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">block_t</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">))</span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_impl_0</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">__main_block_func_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">570425344</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;copy&quot;</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">id</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)((</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">objc_getClass</span><span class=\"p\">(</span><span class=\"s\">&quot;NSObject&quot;</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;alloc&quot;</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;init&quot;</span><span class=\"p\">)));</span><span class=\"w\"></span>\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">id</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)((</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">objc_getClass</span><span class=\"p\">(</span><span class=\"s\">&quot;NSObject&quot;</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;alloc&quot;</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;init&quot;</span><span class=\"p\">)));</span><span class=\"w\"></span>\n<span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">id</span><span class=\"p\">))((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">FuncPtr</span><span class=\"p\">)((</span><span class=\"n\">__block_impl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">block</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)((</span><span class=\"bp\">NSObject</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)(</span><span class=\"kt\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">SEL</span><span class=\"p\">))(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">objc_msgSend</span><span class=\"p\">)((</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"n\">objc_getClass</span><span class=\"p\">(</span><span class=\"s\">&quot;NSObject&quot;</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;alloc&quot;</span><span class=\"p\">)),</span><span class=\"w\"> </span><span class=\"n\">sel_registerName</span><span class=\"p\">(</span><span class=\"s\">&quot;init&quot;</span><span class=\"p\">)));</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d Block\u6355\u83b7\u4e86\u4e00\u4e2a __strong \u7c7b\u578b\u7684\u53d8\u91cf array\uff0c\u867d\u7136\u6e90\u7801\u4e2d\u6ca1\u6709\u6807\u8bc6\u3002\u5728Objective-C\u4e2d\uff0cC\u8bed\u8a00\u7ed3\u6784\u4f53\u4e0d\u80fd\u542b\u6709 __strong \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u56e0\u4e3a\u5728Block\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4ee5\u53ca\u5806\u4e0a\u7684Block\u5e9f\u5f03\u65f6\uff0c\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u4f55\u65f6\u8fdb\u884cC\u8bed\u8a00\u7ed3\u6784\u4f53\u7684\u521d\u59cb\u5316\u548c\u5e9f\u5f03\u64cd\u4f5c\uff0c\u4f46\u662f\u7531\u4e8e Objective-C\u7684\u8fd0\u884c\u5e93\u80fd\u591f\u51c6\u786e\u628a\u63e1Block\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4ee5\u53ca\u5806\u4e0a\u7684Block\u5e9f\u5f03\u7684\u65f6\u673a\uff0c\u56e0\u6b64\u5728 __main_block_desc_0\u589e\u52a0\u4e86 copy\u3001dispose\u6210\u5458\u53d8\u91cf\u5e76\u8d4b\u4e88__main_block_copy_0\u3001__main_block_dispose_0\u51fd\u6570\uff0c\u901a\u8fc7\u8fd9\u4e2a\u4e24\u4e2a\u51fd\u6570\u7ba1\u7406\u6b64\u7c7b\u53d8\u91cf\u7684\u590d\u5236\u548c\u5e9f\u5f03\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_desc_0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">reserved</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">Block_size</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">copy</span><span class=\"p\">)(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">dispose</span><span class=\"p\">)(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">__main_block_desc_0_DATA</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">__main_block_copy_0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">__main_block_dispose_0</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// BLOCK_FIELD_IS_OBJECT \u548c BLOCK_FIELD_IS_BYREY \u7528\u4e8e\u5206\u8fa8copy\u548cdispose\u51fd\u6570\u7684\u5bf9\u8c61\u7c7b\u578b\u662f\u5bf9\u8c61\u8fd8\u662f __block\u53d8\u91cf\u3002</span>\n<span class=\"c1\">// \u5728Block \u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4e0a\u65f6\uff0c\u4f1a\u8c03\u7528__main_block_copy_0 \u5c06 __strong \u7c7b\u578b\u53d8\u91cf\u8ddf\u968fBlock\u590d\u5236\u5230\u5806\u4e0a</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_copy_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">dst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">src</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">_Block_object_assign</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">dst</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">src</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"cm\">/*BLOCK_FIELD_IS_OBJECT*/</span><span class=\"p\">);}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// \u5f53\u5806\u4e0aBlock \u5e9f\u5f03\u65f6\uff0c__main_block_dispose_0 \u5c06 __strong \u7c7b\u578b\u53d8\u91cf\u5e9f\u5f03</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">__main_block_dispose_0</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">__main_block_impl_0</span><span class=\"o\">*</span><span class=\"n\">src</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">_Block_object_dispose</span><span class=\"p\">((</span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">src</span><span class=\"o\">-&gt;</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"cm\">/*BLOCK_FIELD_IS_OBJECT*/</span><span class=\"p\">);}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u5728ARC\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u9002\u5f53\u5730\u8fdb\u884c\u5224\u65ad\u53bb\u81ea\u52a8\u6267\u884ccopy\uff0c\u800c\u5728MRC\u4e0b\u9700\u8981\u81ea\u5df1\u624b\u52a8copy\uff0c\u770b\u4e0b\u9762\u5728ARC\u73af\u5883\u4e0b\u7684\u4e00\u4e2a\u8fd4\u56deBlock\u7684\u51fd\u6570\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">blk_t</span><span class=\"p\">)(</span><span class=\"kt\">int</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">blk_t</span><span class=\"w\"> </span><span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">rate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">rate</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">count</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"n\">ARC\u7f16\u8bd1\u5668\u8f6c\u6362\u7b80\u7ea6\u540e</span><span class=\"err\">\uff1a</span><span class=\"w\"></span>\n<span class=\"n\">blk_t</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">race</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">blk_t</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__func_block_impl_0</span><span class=\"p\">(</span><span class=\"n\">__func_block_func0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">__func_block_desc_0_DATA</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rate</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"n\">tmp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">objc_retainBlock</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">objc_autoreleaseReturnValue</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u7b2c\u4e00\u6b65\uff0c\u901a\u8fc7Block\u7ed3\u6784\u4f53\u6784\u9020\u51fd\u6570\u751f\u6210\u914d\u7f6e\u5728\u6808\u4e0a\u7684\u7ed3\u6784\u4f53\u5b9e\u4f8b\u5e76\u5c06\u5176\u8d4b\u7ed9Block \u53d8\u91cf tmp\u3002\u7b2c\u4e8c\u6b65\uff0cobjc_retainBlock()\u51fd\u6570\u5b9e\u8d28\u662f_Block_copy\u51fd\u6570\uff08\u7531objc4 \u8fd0\u884c\u5e93\u53ef\u77e5\uff09\uff0c\u5c06\u6808\u4e0a\u7684Block\u53d8\u91cftmp\u590d\u5236\u5230\u5806\u4e0a\u3002\u7b2c\u4e09\u6b65\uff0c\u5c06\u5806\u4e0a\u7684Block\u53d8\u91cftmp\u4f5c\u4e3aObjective-C\u5bf9\u8c61\u6ce8\u518c\u5230\u81ea\u52a8\u91ca\u653e\u6c60\u4e2d\uff0c\u7136\u540e\u8fd4\u56de\u6539\u5bf9\u8c61\u3002\u867d\u8bf4ARC\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u9002\u5f53\u5730\u8fdb\u884c\u5224\u65ad\u53bb\u81ea\u52a8\u751f\u6210\u201c\u5c06Block \u53d8\u91cf\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4e0a\u201d\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u5728\u6b64\u4e4b\u5916\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u81ea\u5df1\u624b\u52a8copy\uff0c\u6bd4\u5982 alloc/new/copy/mutableCopy\u7b49\u65b9\u6cd5\u5176\u5b9e\u90fd\u662f\u5c06\u5bf9\u8c61\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4e0a\u7684\u64cd\u4f5c\u3002\u5728ARC\u4e2d\u6709\u4ee5\u4e0b\u60c5\u51b5\u9700\u8981\u624b\u52a8copy\uff1a</p>\n<ul>\n<li>\u5411\u65b9\u6cd5\u6216\u8005\u51fd\u6570\u7684\u53c2\u6570\u4e2d\u4f20\u9012Block\u4e4b\u524d\u65f6\uff0c\u5f53\u7136\u5982\u679c\u65b9\u6cd5\u6216\u6216\u8005\u51fd\u6570\u4e2d\u6709\u5bf9Block\u8fdb\u884c\u590d\u5236\u7684\u64cd\u4f5c\uff0c\u90a3\u4fbf\u4e0d\u9700\u8981\u3002</li>\n<li>NSArray\u7c7b\u7684 initWithObjects \u5b9e\u4f8b\u65b9\u6cd5</li>\n</ul>\n<p>\u5728ARC\u4e2d\u6709\u4ee5\u4e0b\u60c5\u51b5\u4e0d\u9700\u8981\u624b\u52a8copy\uff1a</p>\n<ul>\n<li>Block\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u65f6</li>\n<li>\u5c06 Block\u8d4b\u503c\u7ed9 \u4f7f\u7528 __strong \u4fee\u9970\u7b26\u7684id\u7c7b\u578b\u6216 Block\u7c7b\u578b\u53d8\u91cf</li>\n<li>Coccoa \u6846\u67b6\u7684\u65b9\u6cd5\u4e14\u65b9\u6cd5\u540d\u4e2d\u542b\u6709 usingBlock \u4e2d\u4f7f\u7528\u65f6\u3002</li>\n<li>Grand Central Dispatch \u7684API\u4e2d</li>\n</ul>\n<p>\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684Block\u8fdb\u884ccopy\u64cd\u4f5c\u540e\u7684\u60c5\u51b5</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"n\">\u7684\u7c7b</span><span class=\"w\">                   </span><span class=\"n\">\u526f\u672c\u6e90\u7684\u914d\u7f6e\u5b58\u50a8\u57df</span><span class=\"w\">                 </span><span class=\"n\">\u590d\u5236\u7ed3\u679c</span><span class=\"w\"></span>\n<span class=\"n\">_NSConcreteStackBlock</span><span class=\"w\">        </span><span class=\"n\">\u6808</span><span class=\"w\">                            </span><span class=\"n\">\u4ece\u6808\u590d\u5236\u5230\u5806</span><span class=\"w\"></span>\n<span class=\"n\">_NSConcreteGlobalBlock</span><span class=\"w\">       </span><span class=\"n\">\u7a0b\u5e8f\u7684\u6570\u636e\u533a\u57df</span><span class=\"w\">                   </span><span class=\"n\">\u4ec0\u4e48\u4e5f\u4e0d\u505a</span><span class=\"w\"></span>\n<span class=\"n\">_NSConcreteMallocBlock</span><span class=\"w\">       </span><span class=\"n\">\u5806</span><span class=\"w\">                            </span><span class=\"n\">\u5f15\u7528\u8ba1\u6570\u589e\u52a0</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4e0d\u7ba1Block\u914d\u7f6e\u5728\u4f55\u5904\uff0c\u7528copy\u65b9\u6cd5\u90fd\u4e0d\u4f1a\u5f15\u8d77\u4efb\u4f55\u95ee\u9898\uff0c\u56e0\u6b64\u5728\u4e0d\u786e\u5b9a\u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u7528copy\u65b9\u6cd5\uff0c\u4f46\u662f\u9700\u6ce8\u610f\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4e0a\u5341\u5206\u6d88\u8017CPU\u8d44\u6e90\u3002</p>\n<p>\u4ee5\u4e0a\u53ea\u5bf9Block\u8fdb\u884c\u4e86\u8bf4\u660e\uff0c\u90a3\u4e48\u5bf9\u4e8e__block \u53d8\u91cf\u53c8\u662f\u600e\u4e48\u5904\u7406\u7684\uff1f</p>\n<p>\u5f53Block\u4ece\u6808\u4e0a\u590d\u5236\u5230\u5806\u4e0a\u65f6\uff0c\u5176\u62e5\u6709\u7684\u6240\u6709__block \u53d8\u91cf\u4e5f\u4f1a\u968fBlock\u5168\u90e8\u88ab\u590d\u5236\u5230\u5806\u4e0a\u3002\u6808\u4e0a\u7684__block\u53d8\u91cf\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u53d8\u91cf __forwarding\u7684\u503c\u4f1a\u88ab\u66ff\u6362\u6210\u5806\u4e0a\u7684__block\u53d8\u91cf\u7ed3\u6784\u4f53\u7684\u5730\u5740\uff0c\u5806\u4e0a\u7684__block\u53d8\u91cf\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u53d8\u91cf __forwarding\u4f9d\u7136\u6307\u5411\u81ea\u8eab\uff0c\u56e0\u6b64\uff0c\u4e0d\u7ba1\u662f\u5728\u6808\u4e0a\u6211\u4eec\u90fd\u80fd\u901a\u8fc7__forwarding \u8bbf\u95ee\u540c\u4e00\u4e2a__block \u53d8\u91cf\u3002</p>\n<p><img alt=\"image\" src=\"../postImage/Block/psb-1.png\" /></p>\n<h3 id=\"block_6\">Block \u5faa\u73af\u5f15\u7528</h3>\n<h4 id=\"block_7\">Block \u662f\u5982\u4f55\u5f15\u8d77\u5faa\u73af\u5f15\u7528\u7684</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#import &lt;Foundation/Foundation.h&gt;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"n\">printBlock_t</span><span class=\"p\">)(</span><span class=\"kt\">void</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"k\">@interface</span> <span class=\"nc\">TestCircleRetain</span> : <span class=\"bp\">NSObject</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">printBlock_t</span><span class=\"w\"> </span><span class=\"n\">printBlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">@property</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">nonatomic</span><span class=\"p\">,</span><span class=\"k\">weak</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"bp\">NSString</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">name</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">test</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">@end</span><span class=\"w\"></span>\n\n<span class=\"cp\">#import &quot;TestCircleRetain.h&quot;</span>\n\n<span class=\"k\">@implementation</span> <span class=\"nc\">TestCircleRetain</span><span class=\"w\"></span>\n\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"kt\">instancetype</span><span class=\"p\">)</span><span class=\"nf\">init</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"nb\">self</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">super</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">@&quot;sss&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"n\">printBlock</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;print: %@&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_name</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">test</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">printBlock</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">dealloc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;TestCircleRetain dealloc&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"k\">@autoreleasepool</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n\n<span class=\"n\">TestCircleRetain</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">testCircleRetain</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">TestCircleRetain</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n\n<span class=\"k\">@end</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u8fd0\u884c\u540e\u53ef\u53d1\u73b0TestCircleRetain\u5b9e\u4f8b\u7c7b\u7684dealloc\u65b9\u6cd5\u6ca1\u6709\u8c03\u7528\uff0c\u56e0\u4e3a\u5728TestCircleRetain\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\uff0cBlock\u91cc\u4f7f\u7528\u4e86 \u5e26\u6709 __strong\uff08\u5f3a\u5f15\u7528\uff09 \u4fee\u9970\u7684testCircleRetain\uff08\u4e5f\u5c31\u662fself\uff09\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf name\uff0c\u6240\u4ee5Block\u4f1a\u6355\u83b7testCircleRetain\uff08\u800c\u4e0d\u662f\u53ea\u6355\u83b7name\uff0c\u5373\u4f7f\u4f60\u7528\u7684\u662f_name,\u548cself.name\u5e76\u65e0\u5dee\u522b\uff09\uff0c\u5e76\u4e14\u5f53Block\u8d4b\u503c\u7ed9\u6210\u5458\u53d8\u91cfprintBlock\u65f6\uff0cBlock\u7531\u6808\u4e0a\u590d\u5236\u5230\u4e86\u5806\u4e0a \uff0c\u56e0\u6b64 testCircleRetain \u6301\u6709 printBlock\uff0cprintBlock \u6301\u6709 testCircleRetain\uff0c\u53cc\u65b9\u4e92\u76f8\u6301\u6709\uff08\u5f3a\u5f15\u7528\uff09\uff0c\u6ca1\u6cd5\u9500\u6bc1\uff0c\u6545\u800c\u6ca1\u6cd5\u6267\u884cdealloc()\u65b9\u6cd5\u3002\u4e0d\u8fc7\u4e0a\u9762\u7684\u5faa\u73af\u5f15\u7528\u6bd4\u8f83\u660e\u663e\uff0c\u7f16\u8bd1\u5668\u4f1a\u53d1\u73b0\u5e76\u8b66\u544a\u3002</p>\n<p><img alt=\"image\" src=\"../postImage/Block/psb-2.png\" /></p>\n<h4 id=\"_1\">\u5982\u4f55\u907f\u514d\u5faa\u73af\u5f15\u7528</h4>\n<ul>\n<li>\u4f7f\u7528 __weak\uff08\u5f31\u5f15\u7528\uff09\u4fee\u9970\u7684\u53d8\u91cf</li>\n</ul>\n<p>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cBlock\u6355\u83b7\u4e86\u5e26\u6709 __strong\u4fee\u9970\u7684testCircleRetain\u5bf9\u8c61\uff0c\u5bfc\u81f4testCircleRetain\u6301\u6709\u7684printBlock\u53d8\u91cf\u5f3a\u5f15\u7528\u4e86testCircleRetain\u81ea\u8eab\u5f15\u8d77\u5faa\u73af\u5f15\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 __weak \u4fee\u9970\u7684\u53d8\u91cf\u5e76\u5c06testCircleRetain\uff08\u5373self\uff09\u8d4b\u503c\u4f7f\u7528\u6765\u907f\u514d\u5faa\u73af\u5f15\u7528\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">__weak</span><span class=\"w\"> </span><span class=\"n\">TestCircleRetain</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">weakSelf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">printBlock</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;print: %@&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">weakSelf</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p><img alt=\"image\" src=\"../postImage/Block/psb-3.png\" /></p>\n<ul>\n<li>\u4f7f\u7528__block \u53d8\u91cf\u6765\u907f\u514d\u5faa\u73af\u5f15\u7528</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">__block</span><span class=\"w\"> </span><span class=\"n\">block_self</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">printBlock</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;print: %@&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block_self</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">block_self</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>\u4f7f\u7528__block\u4fee\u9970\u7684\u53d8\u91cf\u5e76\u8d4b\u503cself\uff08testCircleRetain\u81ea\u8eab\uff09\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5f15\u7528\u4fbf\u53d8\u6210\u4e86\uff1atestCircleRetain \u5f15\u7528\u4e86 printBlock\uff0cblock_self \u5f15\u7528\u4e86 testCircleRetain\u548c printBlock\u3002\u5f53printBlock\u6267\u884c\u540e \u5faa\u73af\u5f15\u7528\u4fbf\u4f1a\u6253\u7834\uff0c\u4f46\u662f\u5982\u679c\u4f60\u4e0d\u4f7f\u7528 printBlock\u7684\u8bdd\uff0c\u4fbf\u4f1a\u6301\u7eed\u5faa\u73af\u5f15\u7528\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002</p>\n<p><img alt=\"image\" src=\"../postImage/Block/psb-4.png\" /></p>"}