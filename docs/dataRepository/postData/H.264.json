{"title": "H.264", "date": "2023-11-24 18:54:47", "categories": "\u97f3\u89c6\u9891", "tags": "H.264", "keywords": "H.264", "description": "", "images": "", "file_name": "H.264", "short": " H.264 \n H.264\u7801\u6d41\u7ed3\u6784\u5206\u4e3a\u4e24\u5c42: \n \n \u7f51\u7edc\u63d0\u53d6\u5c42 (Network Abstraction Layer, NAL) \n \u89c6\u8baf\u7f16\u7801\u5c42 (Video Coding Layer, VCL) \n \n VCL\u6570\u636e\u5373\u88ab\u538b\u7f29\u7f16\u7801\u540e\u7684\u89c6\u9891\u6570\u636e\u5e8f\u5217, \u9700\u8981\u901a\u8fc7\u5c01\u88c5\u5230 NAL \u5355\u5143\u4e2d\u4e4b\u540e, \u624d\u53ef\u4ee5\u7528\u6765\u4f20\u8f93\u6216\u5b58\u50a8. H.264\u7801\u6d41\u7ed3\u6784\u4e3b\u8981\u7531\u4e00\u7cfb\u5217 GOP \u6784\u6210, \u4e00\u4e2a GOP \u662f\u4e00\u4e2a\u89c6\u9891\u7f16\u7801\u5e8f\u5217, \u6bcf\u4e2a GOP \u7684\u7b2c\u4e00\u5e27\u662f IDR \u5e27, \u6b64\u5916\u8fd8\u5305\u542b\u4e86 SPS \u548c PPS \u4fe1\u606f, \u6bcf\u4e2a GOP \u90fd\u53ef\u4ee5\u72ec\u7acb\u89e3\u7801\u3002 \u4e00\u4e2a GOP \u7531\u4e00\u7cfb\u5217 I\u3001P\u3001B\u5e27\u6784\u6210, \u4e00\u4e2a\u89c6\u9891\u5e27\u53c8\u53ef\u4ee5\u5212\u5206\u4e3a Slice\uff08\u5207\u7247\uff09, \u4e00\u4e2a Slice \u5219\u7531\u5b8f\u5757\u6784\u6210. \n ", "content": "<h3 id=\"h264\">H.264</h3>\n<p>H.264\u7801\u6d41\u7ed3\u6784\u5206\u4e3a\u4e24\u5c42:</p>\n<ul>\n<li>\u7f51\u7edc\u63d0\u53d6\u5c42 (Network Abstraction Layer, NAL)</li>\n<li>\u89c6\u8baf\u7f16\u7801\u5c42 (Video Coding Layer, VCL)</li>\n</ul>\n<p>VCL\u6570\u636e\u5373\u88ab\u538b\u7f29\u7f16\u7801\u540e\u7684\u89c6\u9891\u6570\u636e\u5e8f\u5217, \u9700\u8981\u901a\u8fc7\u5c01\u88c5\u5230 NAL \u5355\u5143\u4e2d\u4e4b\u540e, \u624d\u53ef\u4ee5\u7528\u6765\u4f20\u8f93\u6216\u5b58\u50a8. H.264\u7801\u6d41\u7ed3\u6784\u4e3b\u8981\u7531\u4e00\u7cfb\u5217 GOP \u6784\u6210, \u4e00\u4e2a GOP \u662f\u4e00\u4e2a\u89c6\u9891\u7f16\u7801\u5e8f\u5217, \u6bcf\u4e2a GOP \u7684\u7b2c\u4e00\u5e27\u662f IDR \u5e27, \u6b64\u5916\u8fd8\u5305\u542b\u4e86 SPS \u548c PPS \u4fe1\u606f, \u6bcf\u4e2a GOP \u90fd\u53ef\u4ee5\u72ec\u7acb\u89e3\u7801\u3002 \u4e00\u4e2a GOP \u7531\u4e00\u7cfb\u5217 I\u3001P\u3001B\u5e27\u6784\u6210, \u4e00\u4e2a\u89c6\u9891\u5e27\u53c8\u53ef\u4ee5\u5212\u5206\u4e3a Slice\uff08\u5207\u7247\uff09, \u4e00\u4e2a Slice \u5219\u7531\u5b8f\u5757\u6784\u6210.</p>\n<!-- more -->\n<p><img alt=\"image\" src=\"https://meanmouse.github.io/pic/postImage/H.264/H.264\u7801\u6d41\u7ed3\u6784.png\" /></p>\n<h3 id=\"nalu\">NALU</h3>\n<p>H.264 \u7801\u6d41\u7531 NALU \u4e3a\u57fa\u672c\u5355\u5143\u7ec4\u6210, \u65b9\u4fbf\u4f20\u8f93\u548c\u4fdd\u5b58, \u5176\u4e3b\u8981\u683c\u5f0f\u6709\u4e24\u79cd: AVCC\u3001Annex-B, \u5185\u5bb9\u7ec4\u6210\u4e3a:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Header</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Payload</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h4 id=\"avcc\">AVCC</h4>\n<p>AVCC\u662f\u7531 NALU Size + NALU\u6784\u6210, \u7801\u6d41\u524d\u56db\u4e2a\u5b57\u8282\u8868\u793a NALU Size, \u4e3b\u8981\u9002\u7528\u4e8eMp4\u3001FLV\u548cMKV\u7b49\u5c01\u88c5\u5bb9\u5668. </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Size</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Header</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Payload</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Size</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Header</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Payload</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h4 id=\"annex-b\">Annex-B</h4>\n<p>Annex-B\u662f\u7531Start Code + NALU\u6784\u6210, \u4e3b\u8981\u9002\u7528\u4e8eTS\u5c01\u88c5\u5bb9\u5668.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">Start</span><span class=\"w\"> </span><span class=\"n\">Code</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Header</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Payload</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Start</span><span class=\"w\"> </span><span class=\"n\">Code</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Header</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">NALU</span><span class=\"w\"> </span><span class=\"n\">Payload</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p>Start Code \u4e3a: 0x00000001\u62160x000001, 3\u5b57\u8282\u76840x000001\u53ea\u6709\u4e00\u79cd\u573a\u5408\u4e0b\u4f7f\u7528, \u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5e27\u88ab\u5212\u5206\u4e3a\u591a\u4e2aSlice\u7684\u65f6\u5019, \u4ece\u7b2c\u4e8c\u4e2aSlice\u5f00\u59cb, \u5305\u542b\u8fd9\u4e9b Slice \u7684NALU\u4f7f\u75283\u5b57\u8282\u8d77\u59cb\u7801\u3002\u5373\u82e5NALU\u5305\u542b\u7684Slice\u4e3a\u4e00\u5e27\u7684\u5f00\u59cb\u5c31\u75280x00000001, \u5426\u5219\u5c31\u75280x000001\u3002</p>\n<p>\u53e6\u5916\u4e3a\u4e86\u907f\u514d\u771f\u5b9e\u6570\u636e 0x00000001\u30010x000001 \u51b2\u7a81, \u4f7f\u7528 0x03 \u4f5c\u4e3a\u9632\u7ade\u4e89\u7801, \u5373\u5c06\u5176\u4e2d 0x01 \u7528 0x03 \u8868\u793a, \u4e0e Start Code \u533a\u5206\u5f00\u6765.</p>\n<h4 id=\"nalu-header\">NALU Header</h4>\n<p>H.264 \u7684 NALU Header \u56fa\u5b9a\u5360\u75281\u4e2a\u5b57\u8282, \u4e3b\u8981\u6807\u8bc6\u4e86\u4e09\u90e8\u5206\u5185\u5bb9:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nx\">forbidden_zero_bit</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nx\">nal_ref_idc</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nx\">nal_unit_type</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"o\">|--------------------|-------------|---------------|</span>\n<span class=\"o\">|</span><span class=\"w\">        </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nx\">bit</span><span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"nx\">bit</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"nx\">bit</span><span class=\"w\">      </span><span class=\"o\">|</span>\n</code></pre></div>\n\n<ul>\n<li>forbidden_zero_bit, \u9ed8\u8ba4\u4e3a0, \u5f53\u4f20\u8f93\u8fc7\u7a0b\u4e2d, \u53d1\u73b0NALU\u6570\u636e\u6709\u9519\u8bef\u65f6, \u53ef\u8bbe\u7f6e\u4e3a1, \u4ee5\u4fbf\u63a5\u6536\u65b9\u7ea0\u9519\u6216\u4e22\u6389\u8be5\u5355\u5143\u3002</li>\n<li>nal_ref_idc, \u6807\u8bc6NALU\u7684\u91cd\u8981\u6027\uff0c\u503c\u8d8a\u5927\uff0c\u91cd\u8981\u6027\u8d8a\u9ad8\u3002\u5f53\u89e3\u7801\u5668\u5904\u7406\u4e0d\u8fc7\u6765\u65f6\uff0c\u53ef\u4ee5\u4e22\u6389\u91cd\u8981\u6027\u4e3a0\u7684NALU\u3002</li>\n<li>nal_unit_type \u6807\u8bc6 NALU \u7684\u7c7b\u578b\uff0c\u51b3\u5b9a\u4e86\u5982\u4f55\u89e3\u6790 NALU Payload.</li>\n</ul>\n<p>nal_unit_type:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">0</span><span class=\"err\">\uff1a</span><span class=\"n\">\u672a\u5b9a\u4e49</span>\n<span class=\"mf\">1</span><span class=\"err\">\uff1a</span><span class=\"n\">\u975eIDR\u56fe\u50cf\u4e2d\u4e0d\u91c7\u7528\u6570\u636e\u5212\u5206\u7684\u7247\u6bb5</span>\n<span class=\"mf\">2</span><span class=\"err\">\uff1a</span><span class=\"n\">\u975eIDR\u56fe\u50cf\u4e2dA\u7c7b\u6570\u636e\u5212\u5206\u7247\u6bb5</span>\n<span class=\"mf\">3</span><span class=\"err\">\uff1a</span><span class=\"n\">\u975eIDR\u56fe\u50cf\u4e2dB\u7c7b\u6570\u636e\u5212\u5206\u7247\u6bb5</span>\n<span class=\"mf\">4</span><span class=\"err\">\uff1a</span><span class=\"n\">\u975eIDR\u56fe\u50cf\u4e2dC\u7c7b\u6570\u636e\u5212\u5206\u7247\u6bb5</span>\n<span class=\"mf\">5</span><span class=\"err\">\uff1a</span><span class=\"n\">IDR\u56fe\u50cf\u7684\u7247\u6bb5</span>\n<span class=\"mf\">6</span><span class=\"err\">\uff1a</span><span class=\"n\">\u8865\u5145\u589e\u5f3a\u4fe1\u606f</span><span class=\"err\">\uff08</span><span class=\"n\">SEI</span><span class=\"err\">\uff09</span>\n<span class=\"mf\">7</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5e8f\u5217\u53c2\u6570\u96c6</span><span class=\"err\">\uff08</span><span class=\"n\">SPS</span><span class=\"err\">\uff09</span>\n<span class=\"mf\">8</span><span class=\"err\">\uff1a</span><span class=\"n\">\u56fe\u50cf\u53c2\u6570\u96c6</span><span class=\"err\">\uff08</span><span class=\"n\">PPS</span><span class=\"err\">\uff09</span>\n<span class=\"mf\">9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5206\u5272\u7b26</span>\n<span class=\"mf\">10</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5e8f\u5217\u7ed3\u675f\u7b26</span>\n<span class=\"mf\">11</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6d41\u7ed3\u675f\u7b26</span>\n<span class=\"mf\">12</span><span class=\"err\">\uff1a</span><span class=\"n\">\u586b\u5145\u6570\u636e</span>\n<span class=\"mf\">13</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5e8f\u5217\u53c2\u6570\u96c6\u6269\u5c55</span>\n<span class=\"mf\">14</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5e26\u524d\u7f00\u7684NAL\u5355\u5143</span>\n<span class=\"mf\">15</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5b50\u5e8f\u5217\u53c2\u6570\u96c6</span>\n<span class=\"mf\">16</span><span class=\"w\"> </span><span class=\"err\">\u2013</span><span class=\"w\"> </span><span class=\"mf\">18</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4fdd\u7559</span>\n<span class=\"mf\">19</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4e0d\u91c7\u7528\u6570\u636e\u5212\u5206\u7684\u8f85\u52a9\u7f16\u7801\u56fe\u50cf\u7247\u6bb5</span>\n<span class=\"mf\">20</span><span class=\"err\">\uff1a</span><span class=\"n\">\u7f16\u7801\u7247\u6bb5\u6269\u5c55</span>\n<span class=\"mf\">21</span><span class=\"w\"> </span><span class=\"err\">\u2013</span><span class=\"w\"> </span><span class=\"mf\">23</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4fdd\u7559</span>\n<span class=\"mf\">24</span><span class=\"w\"> </span><span class=\"err\">\u2013</span><span class=\"w\"> </span><span class=\"mf\">31</span><span class=\"err\">\uff1a</span><span class=\"n\">\u672a\u89c4\u5b9a</span>\n</code></pre></div>\n\n<p>nal_ref_idc\u548cnal_unit_type \u5177\u6709\u4e00\u5b9a\u7684\u76f8\u5173\u6027:</p>\n<table>\n<thead>\n<tr>\n<th>nal_unit_type</th>\n<th>nal_ref_idc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1 - 4</td>\n<td>\u5982\u679c\u5176\u4e2d\u4e00\u4e2a NALU \u4e3a0\uff0c\u5219\u56fe\u7247\u7684\u67c4\u811a\u4e2d Type\u4e3a1-4\uff08\u5305\u62ec1-4\uff09\u7684\u6240\u6709 NAL \u5355\u5143\u5747\u4e3a0</td>\n</tr>\n<tr>\n<td>5 IDR\u56fe\u50cf\u7684\u7247\u6bb5</td>\n<td>\u975e0</td>\n</tr>\n<tr>\n<td>7 \u5e8f\u5217\u53c2\u6570\u96c6\uff08SPS\uff09</td>\n<td>\u975e0</td>\n</tr>\n<tr>\n<td>8 \u56fe\u50cf\u53c2\u6570\u96c6\uff08PPS\uff09</td>\n<td>\u975e0</td>\n</tr>\n<tr>\n<td>13 \u5e8f\u5217\u53c2\u6570\u96c6\u6269\u5c55</td>\n<td>\u975e0</td>\n</tr>\n<tr>\n<td>15 \u5b50\u5e8f\u5217\u53c2\u6570\u96c6</td>\n<td>\u975e0</td>\n</tr>\n<tr>\n<td>6, 9, 10, 11 or 12</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"sps\">SPS</h3>\n<p>H.264 \u4e2d\u7684 SPS\uff08Sequence Parameter Set\uff09\u662f\u4e00\u79cd\u53c2\u6570\u96c6\uff0c\u7528\u4e8e\u63cf\u8ff0\u89c6\u9891\u5e8f\u5217\u7684\u7279\u5f81\u548c\u914d\u7f6e\u4fe1\u606f\u3002SPS \u662f\u5728 H.264 \u89c6\u9891\u6d41\u4e2d\u7684\u4e00\u4e2a\u5143\u6570\u636e\u5355\u5143\uff0c\u5b83\u5305\u542b\u4e86\u89c6\u9891\u7f16\u7801\u5668\u7684\u8bbe\u7f6e\u548c\u89c6\u9891\u5e8f\u5217\u7684\u7279\u6027\u3002</p>\n<ul>\n<li>Profile \u548c Level\uff1a\u6307\u5b9a\u89c6\u9891\u7f16\u7801\u7684\u914d\u7f6e\u548c\u517c\u5bb9\u6027\u7ea7\u522b\u3002</li>\n<li>\u56fe\u50cf\u5c3a\u5bf8\u548c\u5bbd\u9ad8\u6bd4\uff1a\u63cf\u8ff0\u89c6\u9891\u56fe\u50cf\u7684\u5c3a\u5bf8\u548c\u5bbd\u9ad8\u6bd4\u3002</li>\n<li>\u5e27\u7387\u548c\u6bd4\u7279\u7387\uff1a\u6307\u5b9a\u89c6\u9891\u7684\u5e27\u7387\u548c\u6bd4\u7279\u7387\uff0c\u5f71\u54cd\u89c6\u9891\u7684\u6d41\u7545\u5ea6\u548c\u538b\u7f29\u6548\u7387\u3002</li>\n<li>\u5e27\u95f4\u9884\u6d4b\u548c\u5e27\u5185\u9884\u6d4b\u8bbe\u7f6e\uff1a\u63cf\u8ff0\u89c6\u9891\u7f16\u7801\u4e2d\u7684\u9884\u6d4b\u6a21\u5f0f\u548c\u5e27\u7c7b\u578b\u3002</li>\n<li>\u91cf\u5316\u53c2\u6570\uff1a\u63a7\u5236\u89c6\u9891\u8d28\u91cf\u548c\u538b\u7f29\u6bd4\u4f8b\u7684\u53c2\u6570\u3002</li>\n<li>\u71b5\u7f16\u7801\u6a21\u5f0f\uff1a\u6307\u5b9a\u71b5\u7f16\u7801\u7684\u65b9\u5f0f\uff0c\u5f71\u54cd\u7f16\u7801\u7684\u590d\u6742\u5ea6\u548c\u538b\u7f29\u6548\u7387\u3002</li>\n<li>\u53c2\u8003\u5e27\u8bbe\u7f6e\uff1a\u6307\u5b9a\u53c2\u8003\u5e27\u7684\u914d\u7f6e\u548c\u4f7f\u7528\u65b9\u5f0f\uff0c\u7528\u4e8e\u5e27\u95f4\u9884\u6d4b\u3002</li>\n</ul>\n<p><img alt=\"image\" src=\"https://meanmouse.github.io/pic/postImage/H.264/H.264-SPS.png\" /><br />\n\u76f8\u5173\u53c2\u6570\u8bf4\u660e\u53ef\u67e5\u770b\u6587\u6863: <a href=\"https://www.itu.int/rec/T-REC-H.264\">H.264</a></p>\n<h5 id=\"profile_idc\">profile_idc\uff1a</h5>\n<p>\u6807\u8bc6\u5f53\u524dH.264\u7801\u6d41\u7684profile\u3002\u6211\u4eec\u77e5\u9053\uff0cH.264\u4e2d\u5b9a\u4e49\u4e86\u4e09\u79cd\u5e38\u7528\u7684\u6863\u6b21profile\uff1a</p>\n<ul>\n<li>\u57fa\u51c6\u6863\u6b21\uff1abaseline profile;</li>\n<li>\u4e3b\u8981\u6863\u6b21\uff1amain profile;</li>\n<li>\u6269\u5c55\u6863\u6b21\uff1aextended profile;</li>\n</ul>\n<p>\u5728H.264\u7684SPS\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u5b57\u8282\u8868\u793aprofile_idc\uff0c\u6839\u636eprofile_idc\u7684\u503c\u53ef\u4ee5\u786e\u5b9a\u7801\u6d41\u7b26\u5408\u54ea\u4e00\u79cd\u6863\u6b21\u3002\u5224\u65ad\u89c4\u5f8b\u4e3a\uff1a</p>\n<ul>\n<li>profile_idc = 66 \u2192 baseline profile;</li>\n<li>profile_idc = 77 \u2192 main profile;</li>\n<li>profile_idc = 88 \u2192 extended profile;</li>\n</ul>\n<p>\u5728\u65b0\u7248\u7684\u6807\u51c6\u4e2d\uff0c\u8fd8\u5305\u62ec\u4e86High\u3001High 10\u3001High 4:2:2\u3001High 4:4:4\u3001High 10 Intra\u3001High<br />\n4:2:2 Intra\u3001High 4:4:4 Intra\u3001CAVLC 4:4:4 Intra\u7b49\uff0c\u6bcf\u4e00\u79cd\u90fd\u7531\u4e0d\u540c\u7684profile_idc\u8868\u793a\u3002</p>\n<p>\u53e6\u5916\uff0cconstraint_set0_flag ~ constraint_set5_flag\u662f\u5728\u7f16\u7801\u7684\u6863\u6b21\u65b9\u9762\u5bf9\u7801\u6d41\u589e\u52a0\u7684\u5176\u4ed6\u4e00\u4e9b\u989d\u5916\u9650\u5236\u6027\u6761\u4ef6\u3002</p>\n<p>\u5728\u6211\u4eec\u5b9e\u9a8c\u7801\u6d41\u4e2d\uff0cprofile_idc = 0x42 = 66\uff0c\u56e0\u6b64\u7801\u6d41\u7684\u6863\u6b21\u4e3abaseline profile\u3002</p>\n<h5 id=\"level_idc\">level_idc</h5>\n<p>\u6807\u8bc6\u5f53\u524d\u7801\u6d41\u7684Level\u3002\u7f16\u7801\u7684Level\u5b9a\u4e49\u4e86\u67d0\u79cd\u6761\u4ef6\u4e0b\u7684\u6700\u5927\u89c6\u9891\u5206\u8fa8\u7387\u3001\u6700\u5927\u89c6\u9891\u5e27\u7387\u7b49\u53c2\u6570\uff0c\u7801\u6d41\u6240\u9075\u4ece\u7684level\u7531level_idc\u6307\u5b9a\u3002<br />\n\u5f53\u524d\u7801\u6d41\u4e2d\uff0clevel_idc = 0x1e = 30\uff0c\u56e0\u6b64\u7801\u6d41\u7684\u7ea7\u522b\u4e3a3\u3002</p>\n<h5 id=\"seq_parameter_set_id\">seq_parameter_set_id</h5>\n<p>\u8868\u793a\u5f53\u524d\u7684\u5e8f\u5217\u53c2\u6570\u96c6\u7684id\u3002\u901a\u8fc7\u8be5id\u503c\uff0c\u56fe\u50cf\u53c2\u6570\u96c6pps\u53ef\u4ee5\u5f15\u7528\u5176\u4ee3\u8868\u7684sps\u4e2d\u7684\u53c2\u6570\u3002</p>\n<h5 id=\"log2_max_frame_num_minus4\">log2_max_frame_num_minus4</h5>\n<p>\u7528\u4e8e\u8ba1\u7b97MaxFrameNum\u7684\u503c\u3002\u8ba1\u7b97\u516c\u5f0f\u4e3aMaxFrameNum = 2^(log2_max_frame_num_minus4 +<br />\n4)\u3002MaxFrameNum\u662fframe_num\u7684\u4e0a\u9650\u503c\uff0cframe_num\u662f\u56fe\u50cf\u5e8f\u53f7\u7684\u4e00\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u5728\u5e27\u95f4\u7f16\u7801\u4e2d\u5e38\u7528\u4f5c\u4e00\u79cd\u53c2\u8003\u5e27\u6807\u8bb0\u7684\u624b\u6bb5\u3002</p>\n<h5 id=\"pic_order_cnt_type\">pic_order_cnt_type</h5>\n<p>\u8868\u793a\u89e3\u7801picture order count(POC)\u7684\u65b9\u6cd5\u3002POC\u662f\u53e6\u4e00\u79cd\u8ba1\u91cf\u56fe\u50cf\u5e8f\u53f7\u7684\u65b9\u5f0f\uff0c\u4e0eframe_num\u6709\u7740\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u8be5\u8bed\u6cd5\u5143\u7d20\u7684\u53d6\u503c\u4e3a0\u30011\u62162\u3002</p>\n<h5 id=\"log2_max_pic_order_cnt_lsb_minus4\">log2_max_pic_order_cnt_lsb_minus4</h5>\n<p>\u7528\u4e8e\u8ba1\u7b97MaxPicOrderCntLsb\u7684\u503c\uff0c\u8be5\u503c\u8868\u793aPOC\u7684\u4e0a\u9650\u3002\u8ba1\u7b97\u65b9\u6cd5\u4e3aMaxPicOrderCntLsb = 2^(log2_max_pic_order_cnt_lsb_minus4 + 4)\u3002</p>\n<h5 id=\"max_num_ref_frames\">max_num_ref_frames</h5>\n<p>\u7528\u4e8e\u8868\u793a\u53c2\u8003\u5e27\u7684\u6700\u5927\u6570\u76ee\u3002</p>\n<h5 id=\"gaps_in_frame_num_value_allowed_flag\">gaps_in_frame_num_value_allowed_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u8bf4\u660eframe_num\u4e2d\u662f\u5426\u5141\u8bb8\u4e0d\u8fde\u7eed\u7684\u503c\u3002</p>\n<h5 id=\"pic_width_in_mbs_minus1\">pic_width_in_mbs_minus1</h5>\n<p>\u7528\u4e8e\u8ba1\u7b97\u56fe\u50cf\u7684\u5bbd\u5ea6\u3002\u5355\u4f4d\u4e3a\u5b8f\u5757\u4e2a\u6570\uff0c\u56e0\u6b64\u56fe\u50cf\u7684\u5b9e\u9645\u5bbd\u5ea6\u4e3a:</p>\n<p>frame_width = 16 \u00d7 (pic_width_in_mbs_minus1 + 1);</p>\n<h5 id=\"pic_height_in_map_units_minus1\">pic_height_in_map_units_minus1</h5>\n<p>\u4f7f\u7528PicHeightInMapUnits\u6765\u5ea6\u91cf\u89c6\u9891\u4e2d\u4e00\u5e27\u56fe\u50cf\u7684\u9ad8\u5ea6\u3002PicHeightInMapUnits\u5e76\u975e\u56fe\u50cf\u660e\u786e\u7684\u4ee5\u50cf\u7d20\u6216\u5b8f\u5757\u4e3a\u5355\u4f4d\u7684\u9ad8\u5ea6\uff0c\u800c\u9700\u8981\u8003\u8651\u8be5\u5b8f\u5757\u662f\u5e27\u7f16\u7801\u6216\u573a\u7f16\u7801\u3002PicHeightInMapUnits\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a</p>\n<p>PicHeightInMapUnits = pic_height_in_map_units_minus1 + 1;</p>\n<h5 id=\"frame_mbs_only_flag\">frame_mbs_only_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u8bf4\u660e\u5b8f\u5757\u7684\u7f16\u7801\u65b9\u5f0f\u3002\u5f53\u8be5\u6807\u8bc6\u4f4d\u4e3a0\u65f6\uff0c\u5b8f\u5757\u53ef\u80fd\u4e3a\u5e27\u7f16\u7801\u6216\u573a\u7f16\u7801\uff1b\u8be5\u6807\u8bc6\u4f4d\u4e3a1\u65f6\uff0c\u6240\u6709\u5b8f\u5757\u90fd\u91c7\u7528\u5e27\u7f16\u7801\u3002\u6839\u636e\u8be5\u6807\u8bc6\u4f4d\u53d6\u503c\u4e0d\u540c\uff0cPicHeightInMapUnits\u7684\u542b\u4e49\u4e5f\u4e0d\u540c\uff0c\u4e3a0\u65f6\u8868\u793a\u4e00\u573a\u6570\u636e\u6309\u5b8f\u5757\u8ba1\u7b97\u7684\u9ad8\u5ea6\uff0c\u4e3a1\u65f6\u8868\u793a\u4e00\u5e27\u6570\u636e\u6309\u5b8f\u5757\u8ba1\u7b97\u7684\u9ad8\u5ea6\u3002</p>\n<p>\u6309\u7167\u5b8f\u5757\u8ba1\u7b97\u7684\u56fe\u50cf\u5b9e\u9645\u9ad8\u5ea6FrameHeightInMbs\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a</p>\n<p>FrameHeightInMbs = ( 2 \u2212 frame_mbs_only_flag ) * PicHeightInMapUnits</p>\n<h5 id=\"mb_adaptive_frame_field_flag\">mb_adaptive_frame_field_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u8bf4\u660e\u662f\u5426\u91c7\u7528\u4e86\u5b8f\u5757\u7ea7\u7684\u5e27\u573a\u81ea\u9002\u5e94\u7f16\u7801\u3002\u5f53\u8be5\u6807\u8bc6\u4f4d\u4e3a0\u65f6\uff0c\u4e0d\u5b58\u5728\u5e27\u7f16\u7801\u548c\u573a\u7f16\u7801\u4e4b\u95f4\u7684\u5207\u6362\uff1b\u5f53\u6807\u8bc6\u4f4d\u4e3a1\u65f6\uff0c\u5b8f\u5757\u53ef\u80fd\u5728\u5e27\u7f16\u7801\u548c\u573a\u7f16\u7801\u6a21\u5f0f\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002</p>\n<h5 id=\"direct_8x8_inference_flag\">direct_8x8_inference_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u7528\u4e8eB_Skip\u3001B_Direct\u6a21\u5f0f\u8fd0\u52a8\u77e2\u91cf\u7684\u63a8\u5bfc\u8ba1\u7b97\u3002</p>\n<h5 id=\"frame_cropping_flag\">frame_cropping_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u8bf4\u660e\u662f\u5426\u9700\u8981\u5bf9\u8f93\u51fa\u7684\u56fe\u50cf\u5e27\u8fdb\u884c\u88c1\u526a\u3002</p>\n<h5 id=\"vui_parameters_present_flag\">vui_parameters_present_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u8bf4\u660eSPS\u4e2d\u662f\u5426\u5b58\u5728VUI\u4fe1\u606f\u3002</p>\n<h3 id=\"vui_parameters\">vui_parameters</h3>\n<p>vui_parameters \u662f\u89c6\u9891\u7f16\u7801\u4e2d\u7684\u4e00\u79cd\u53c2\u6570\uff0c\u7528\u4e8e\u63cf\u8ff0\u89c6\u9891\u5e8f\u5217\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u5373\u89c6\u9891\u4f7f\u7528\u8005\u4fe1\u606f (Video Usability Information)\u3002vui_parameters \u5305\u542b\u4e86\u4e0e\u89c6\u9891\u5e8f\u5217\u7684\u4f7f\u7528\u548c\u663e\u793a\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4ee5\u63d0\u4f9b\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u548c\u517c\u5bb9\u6027\u3002</p>\n<ul>\n<li>\u5bbd\u9ad8\u6bd4 (aspect_ratio_info)\uff1a\u89c6\u9891\u7684\u663e\u793a\u5bbd\u9ad8\u6bd4\uff0c\u7528\u4e8e\u6b63\u786e\u663e\u793a\u89c6\u9891\u7684\u5bbd\u9ad8\u6bd4\u4f8b\u3002</li>\n<li>\u989c\u8272\u53c2\u6570 (color_primaries\u3001transfer_characteristics\u3001matrix_coefficients)\uff1a\u89c6\u9891\u7684\u989c\u8272\u7a7a\u95f4\u4fe1\u606f\uff0c\u7528\u4e8e\u6b63\u786e\u89e3\u91ca\u548c\u663e\u793a\u89c6\u9891\u7684\u989c\u8272\u3002</li>\n<li>\u65f6\u95f4\u76f8\u5173\u4fe1\u606f (timing_info)\uff1a\u89c6\u9891\u7684\u65f6\u95f4\u53c2\u6570\uff0c\u5305\u62ec\u5e27\u7387\u548c\u65f6\u95f4\u7801\u7b49\uff0c\u7528\u4e8e\u6b63\u786e\u89e3\u7801\u548c\u64ad\u653e\u89c6\u9891\u3002</li>\n<li>\u89c6\u9891\u4fe1\u53f7\u8303\u56f4 (video_signal_type_present_flag)\uff1a\u89c6\u9891\u4fe1\u53f7\u7684\u8303\u56f4\uff0c\u4f8b\u5982\u5168\u8303\u56f4\u6216\u6807\u51c6\u8303\u56f4\uff0c\u7528\u4e8e\u6b63\u786e\u663e\u793a\u89c6\u9891\u7684\u4eae\u5ea6\u548c\u5bf9\u6bd4\u5ea6\u3002</li>\n<li>\u97f3\u9891\u540c\u6b65\u4fe1\u606f (nal_hrd_parameters\u3001vcl_hrd_parameters)\uff1a\u89c6\u9891\u548c\u97f3\u9891\u4e4b\u95f4\u7684\u540c\u6b65\u4fe1\u606f\uff0c\u786e\u4fdd\u97f3\u89c6\u9891\u540c\u6b65\u64ad\u653e\u3002</li>\n</ul>\n<p><img alt=\"image\" src=\"https://meanmouse.github.io/pic/postImage/H.264/H.264-VUI.png\" /><br />\n\u76f8\u5173\u53c2\u6570\u8bf4\u660e\u53ef\u67e5\u770b\u6587\u6863: <a href=\"https://www.itu.int/rec/T-REC-H.264\">H.264</a></p>\n<h3 id=\"pps\">PPS</h3>\n<p>H.264 PPS\uff08Parameter Set\uff09\u662f\u4e00\u79cd\u89c6\u9891\u7f16\u7801\u6807\u51c6\u4e2d\u7684\u53c2\u6570\u96c6\uff0c\u7528\u4e8e\u63cf\u8ff0\u89c6\u9891\u7f16\u7801\u5668\u7684\u914d\u7f6e\u4fe1\u606f\u3002\u5b83\u5305\u542b\u4e86\u7f16\u7801\u5668\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u5982\u56fe\u50cf\u5c3a\u5bf8\u3001\u5e27\u7387\u3001\u7801\u7387\u63a7\u5236\u65b9\u5f0f\u7b49\u3002</p>\n<p><img alt=\"image\" src=\"https://meanmouse.github.io/pic/postImage/H.264/H.264-PPS.png\" /><br />\n\u76f8\u5173\u53c2\u6570\u8bf4\u660e\u53ef\u67e5\u770b\u6587\u6863: <a href=\"https://www.itu.int/rec/T-REC-H.264\">H.264</a></p>\n<h5 id=\"pic_parameter_set_id\">pic_parameter_set_id</h5>\n<p>\u8868\u793a\u5f53\u524dPPS\u7684id\u3002\u67d0\u4e2aPPS\u5728\u7801\u6d41\u4e2d\u4f1a\u88ab\u76f8\u5e94\u7684slice\u5f15\u7528\uff0cslice\u5f15\u7528PPS\u7684\u65b9\u5f0f\u5c31\u662f\u5728Slice header\u4e2d\u4fdd\u5b58PPS\u7684id\u503c\u3002\u8be5\u503c\u7684\u53d6\u503c\u8303\u56f4\u4e3a[0,255]\u3002</p>\n<h5 id=\"seq_parameter_set_id_1\">seq_parameter_set_id</h5>\n<p>\u8868\u793a\u5f53\u524dPPS\u6240\u5f15\u7528\u7684\u6fc0\u6d3b\u7684SPS\u7684id\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cPPS\u4e2d\u4e5f\u53ef\u4ee5\u53d6\u5230\u5bf9\u5e94SPS\u4e2d\u7684\u53c2\u6570\u3002\u8be5\u503c\u7684\u53d6\u503c\u8303\u56f4\u4e3a[0,31]\u3002</p>\n<h5 id=\"entropy_coding_mode_flag\">entropy_coding_mode_flag</h5>\n<p>\u71b5\u7f16\u7801\u6a21\u5f0f\u6807\u8bc6\uff0c\u8be5\u6807\u8bc6\u4f4d\u8868\u793a\u7801\u6d41\u4e2d\u71b5\u7f16\u7801/\u89e3\u7801\u9009\u62e9\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u90e8\u5206\u8bed\u6cd5\u5143\u7d20\uff0c\u5728\u4e0d\u540c\u7684\u7f16\u7801\u914d\u7f6e\u4e0b\uff0c\u9009\u62e9\u7684\u71b5\u7f16\u7801\u65b9\u5f0f\u4e0d\u540c\u3002\u4f8b\u5982\u5728\u4e00\u4e2a\u5b8f\u5757\u8bed\u6cd5\u5143\u7d20\u4e2d\uff0c\u5b8f\u5757\u7c7b\u578bmb_type\u7684\u8bed\u6cd5\u5143\u7d20\u63cf\u8ff0\u7b26\u4e3a\u201cue(v)<br />\n| ae(v)\u201d\uff0c\u5728baseline profile\u7b49\u8bbe\u7f6e\u4e0b\u91c7\u7528\u6307\u6570\u54e5\u4f26\u5e03\u7f16\u7801\uff0c\u5728main profile\u7b49\u8bbe\u7f6e\u4e0b\u91c7\u7528CABAC\u7f16\u7801\u3002</p>\n<p>\u6807\u8bc6\u4f4dentropy_coding_mode_flag\u7684\u4f5c\u7528\u5c31\u662f\u63a7\u5236\u8fd9\u79cd\u7b97\u6cd5\u9009\u62e9\u3002\u5f53\u8be5\u503c\u4e3a0\u65f6\uff0c\u9009\u62e9\u5de6\u8fb9\u7684\u7b97\u6cd5\uff0c\u901a\u5e38\u4e3a\u6307\u6570\u54e5\u4f26\u5e03\u7f16\u7801\u6216\u8005CAVLC\uff1b\u5f53\u8be5\u503c\u4e3a1\u65f6\uff0c\u9009\u62e9\u53f3\u8fb9\u7684\u7b97\u6cd5\uff0c\u901a\u5e38\u4e3aCABAC\u3002</p>\n<h5 id=\"bottom_field_pic_order_in_frame_present_flag\">bottom_field_pic_order_in_frame_present_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u7528\u4e8e\u8868\u793a\u53e6\u5916\u6761\u5e26\u5934\u4e2d\u7684\u4e24\u4e2a\u8bed\u6cd5\u5143\u7d20 delta_pic_order_cnt_bottom \u548c delta_pic_order_cn\u662f\u5426\u5b58\u5728\u7684\u6807\u8bc6\u3002\u8fd9\u4e24\u4e2a\u8bed\u6cd5\u5143\u7d20\u8868\u793a\u4e86\u67d0\u4e00\u5e27\u7684\u5e95\u573a\u7684POC\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002</p>\n<h5 id=\"num_slice_groups_minus1\">num_slice_groups_minus1</h5>\n<p>\u8868\u793a\u67d0\u4e00\u5e27\u4e2dslice group\u7684\u4e2a\u6570\u3002\u5f53\u8be5\u503c\u4e3a0\u65f6\uff0c\u4e00\u5e27\u4e2d\u6240\u6709\u7684slice\u90fd\u5c5e\u4e8e\u4e00\u4e2aslice group\u3002slice group\u662f\u4e00\u5e27\u4e2d\u5b8f\u5757\u7684\u7ec4\u5408\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728\u534f\u8bae\u6587\u6863\u76843.141\u90e8\u5206\u3002</p>\n<h5 id=\"num_ref_idx_l0_default_active_minus1num_ref_idx_l0_default_active_minus1\">num_ref_idx_l0_default_active_minus1\u3001num_ref_idx_l0_default_active_minus1</h5>\n<p>\u8868\u793a\u5f53Slice Header\u4e2d\u7684num_ref_idx_active_override_flag\u6807\u8bc6\u4f4d\u4e3a0\u65f6\uff0cP/SP/B<br />\nslice\u7684\u8bed\u6cd5\u5143\u7d20num_ref_idx_l0_active_minus1\u548cnum_ref_idx_l1_active_minus1\u7684\u9ed8\u8ba4\u503c\u3002</p>\n<h5 id=\"weighted_pred_flag\">weighted_pred_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u8868\u793a\u5728P/SP slice\u4e2d\u662f\u5426\u5f00\u542f\u52a0\u6743\u9884\u6d4b\u3002</p>\n<h5 id=\"weighted_bipred_idc\">weighted_bipred_idc</h5>\n<p>\u8868\u793a\u5728B Slice\u4e2d\u52a0\u6743\u9884\u6d4b\u7684\u65b9\u6cd5\uff0c\u53d6\u503c\u8303\u56f4\u4e3a[0,2]\u30020\u8868\u793a\u9ed8\u8ba4\u52a0\u6743\u9884\u6d4b\uff0c1\u8868\u793a\u663e\u5f0f\u52a0\u6743\u9884\u6d4b\uff0c2\u8868\u793a\u9690\u5f0f\u52a0\u6743\u9884\u6d4b\u3002</p>\n<h5 id=\"pic_init_qp_minus26pic_init_qs_minus26\">pic_init_qp_minus26\u548cpic_init_qs_minus26</h5>\n<p>\u8868\u793a\u521d\u59cb\u7684\u91cf\u5316\u53c2\u6570\u3002\u5b9e\u9645\u7684\u91cf\u5316\u53c2\u6570\u7531\u8be5\u53c2\u6570\u3001slice header\u4e2d\u7684slice_qp_delta/slice_qs_delta\u8ba1\u7b97\u5f97\u5230\u3002</p>\n<h5 id=\"chroma_qp_index_offset\">chroma_qp_index_offset</h5>\n<p>\u7528\u4e8e\u8ba1\u7b97\u8272\u5ea6\u5206\u91cf\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53d6\u503c\u8303\u56f4\u4e3a[-12,12]\u3002</p>\n<h5 id=\"deblocking_filter_control_present_flag\">deblocking_filter_control_present_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u7528\u4e8e\u8868\u793aSlice header\u4e2d\u662f\u5426\u5b58\u5728\u7528\u4e8e\u53bb\u5757\u6ee4\u6ce2\u5668\u63a7\u5236\u7684\u4fe1\u606f\u3002\u5f53\u8be5\u6807\u5fd7\u4f4d\u4e3a1\u65f6\uff0cslice header\u4e2d\u5305\u542b\u53bb\u5757\u6ee4\u6ce2\u76f8\u5e94\u7684\u4fe1\u606f\uff1b\u5f53\u8be5\u6807\u8bc6\u4f4d\u4e3a0\u65f6\uff0cslice header\u4e2d\u6ca1\u6709\u76f8\u5e94\u7684\u4fe1\u606f\u3002</p>\n<h5 id=\"constrained_intra_pred_flag\">constrained_intra_pred_flag</h5>\n<p>\u82e5\u8be5\u6807\u8bc6\u4e3a1\uff0c\u8868\u793aI\u5b8f\u5757\u5728\u8fdb\u884c\u5e27\u5185\u9884\u6d4b\u65f6\u53ea\u80fd\u4f7f\u7528\u6765\u81eaI\u548cSI\u7c7b\u578b\u5b8f\u5757\u7684\u4fe1\u606f\uff1b\u82e5\u8be5\u6807\u8bc6\u4f4d0\uff0c\u8868\u793aI\u5b8f\u5757\u53ef\u4ee5\u4f7f\u7528\u6765\u81eaInter\u7c7b\u578b\u5b8f\u5757\u7684\u4fe1\u606f\u3002</p>\n<h5 id=\"redundant_pic_cnt_present_flag\">redundant_pic_cnt_present_flag</h5>\n<p>\u6807\u8bc6\u4f4d\uff0c\u7528\u4e8e\u8868\u793aSlice header\u4e2d\u662f\u5426\u5b58\u5728redundant_pic_cnt\u8bed\u6cd5\u5143\u7d20\u3002\u5f53\u8be5\u6807\u5fd7\u4f4d\u4e3a1\u65f6\uff0cslice header\u4e2d\u5305\u542bredundant_pic_cnt\uff1b\u5f53\u8be5\u6807\u8bc6\u4f4d\u4e3a0\u65f6\uff0cslice header\u4e2d\u6ca1\u6709\u76f8\u5e94\u7684\u4fe1\u606f\u3002</p>\n<h3 id=\"h264-videotoolbox\">H.264 VideoToolbox \u7f16\u89e3\u7801</h3>\n<h4 id=\"h264_1\">H.264 \u7f16\u7801</h4>\n<h5 id=\"1-vtcompressionsessionref\">1\u3001\u521b\u5efa VTCompressionSessionRef \u7f16\u7801\u5668</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">/// \u89c6\u9891\u5e27\u5e8f\u5217\u538b\u7f29\u7684\u4f1a\u8bdd</span>\n<span class=\"n\">VTCompressionSessionRef</span><span class=\"w\"> </span><span class=\"n\">_compressionSession</span><span class=\"p\">;</span>\n\n<span class=\"c1\">/// \u521b\u5efa\u7f16\u7801session</span>\n<span class=\"c1\">/// videoCompressonOutputCallback \u7f16\u7801\u7ed3\u679c\u56de\u8c03\u51fd\u6570</span>\n<span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VTCompressionSessionCreate</span><span class=\"p\">(</span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoSize</span><span class=\"p\">.</span><span class=\"n\">width</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoSize</span><span class=\"p\">.</span><span class=\"n\">height</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kCMVideoCodecType_H264</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">videoCompressonOutputCallback</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nb\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">_compressionSession</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;HardwareVideoEncoder create fail&quot;</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h5 id=\"2\">2\u3001\u8bbe\u7f6e\u7f16\u7801\u5668\u53c2\u6570</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">/// \u8bbe\u7f6e\u6700\u5927\u5173\u952e\u5e27\u95f4\u9694</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_MaxKeyFrameInterval</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFTypeRef</span><span class=\"p\">)</span><span class=\"l\">@(</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoMaxKeyframeInterval</span><span class=\"l\">)</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u8bbe\u7f6e\u6700\u5927\u5173\u952e\u5e27\u65f6\u95f4</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFTypeRef</span><span class=\"p\">)</span><span class=\"l\">@(</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoMaxKeyframeInterval</span><span class=\"o\">/</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoFrameRate</span><span class=\"l\">)</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u8bbe\u7f6e\u89c6\u9891\u7684\u5e27\u7387</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_ExpectedFrameRate</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFTypeRef</span><span class=\"p\">)</span><span class=\"l\">@(</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoFrameRate</span><span class=\"l\">)</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u8bbe\u7f6e\u89c6\u9891\u7684\u5e73\u5747\u7801\u7387\uff0c\u5355\u4f4d\u662f bps</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_AverageBitRate</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFTypeRef</span><span class=\"p\">)</span><span class=\"l\">@(</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoBitRate</span><span class=\"l\">)</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u8bbe\u7f6e\u7801\u7387\u8303\u56f4\u9650\u5236</span>\n<span class=\"bp\">NSArray</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"l\">@[@(</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoBitRate</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mf\">1.5</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"l\">)</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"l\">@(</span><span class=\"mi\">1</span><span class=\"l\">)]</span><span class=\"p\">;</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_DataRateLimits</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFArrayRef</span><span class=\"p\">)</span><span class=\"n\">limit</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u662f\u5426\u542f\u7528\u5b9e\u65f6\u538b\u7f29</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_RealTime</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kCFBooleanTrue</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// H264 \u7f16\u7801</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_ProfileLevel</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTProfileLevel_H264_Main_AutoLevel</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u662f\u5426\u5141\u8bb8\u5e27\u91cd\u65b0\u6392\u5e8f</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_AllowFrameReordering</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kCFBooleanFalse</span><span class=\"p\">);</span>\n\n<span class=\"c1\">/// \u6307\u5b9a H.264 \u7f16\u7801\u5668\u7684\u71b5\u7f16\u7801\u6a21\u5f0f</span>\n<span class=\"n\">VTSessionSetProperty</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTCompressionPropertyKey_H264EntropyMode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kVTH264EntropyMode_CABAC</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<h5 id=\"3\">3\u3001\u51c6\u5907\u5f00\u59cb\u7f16\u7801</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">VTCompressionSessionPrepareToEncodeFrames</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<h5 id=\"4\">4\u3001\u5f00\u59cb\u7f16\u7801</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">/// \u7f16\u7801\u6570\u636e</span>\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">encodeVideoData:</span><span class=\"p\">(</span><span class=\"n\">nullable</span><span class=\"w\"> </span><span class=\"n\">CVPixelBufferRef</span><span class=\"p\">)</span><span class=\"nv\">pixelBuffer</span><span class=\"w\"> </span><span class=\"nf\">timeStamp:</span><span class=\"p\">(</span><span class=\"kt\">uint64_t</span><span class=\"p\">)</span><span class=\"nv\">timeStamp</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">_isBackGround</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">frameCount</span><span class=\"o\">++</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">CMTime</span><span class=\"w\"> </span><span class=\"n\">presentationTimeStamp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMTimeMake</span><span class=\"p\">(</span><span class=\"n\">frameCount</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"p\">)</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoFrameRate</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">VTEncodeInfoFlags</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">CMTime</span><span class=\"w\"> </span><span class=\"n\">duration</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMTimeMake</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"p\">)</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoFrameRate</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"bp\">NSDictionary</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">properties</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">frameCount</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"p\">)</span><span class=\"n\">_configuration</span><span class=\"p\">.</span><span class=\"n\">videoMaxKeyframeInterval</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">properties</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"l\">@{</span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"bp\">NSString</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">kVTEncodeFrameOptionKey_ForceKeyFrame</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"m\">@YES</span><span class=\"l\">}</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"bp\">NSNumber</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">timeNumber</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"l\">@(</span><span class=\"n\">timeStamp</span><span class=\"l\">)</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VTCompressionSessionEncodeFrame</span><span class=\"p\">(</span><span class=\"n\">_compressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pixelBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">presentationTimeStamp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">duration</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFDictionaryRef</span><span class=\"p\">)</span><span class=\"n\">properties</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">__bridge_retained</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">timeNumber</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">flags</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"w\"> </span><span class=\"n\">createCompressionSession</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h5 id=\"5\">5\u3001\u7f16\u7801\u8f93\u51fa</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">videoCompressonOutputCallback</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">refCon</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">frameRef</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">VTEncodeInfoFlags</span><span class=\"w\"> </span><span class=\"n\">infoFlags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferRef</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">sampleBuffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">CFArrayRef</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferGetSampleAttachmentsArray</span><span class=\"p\">(</span><span class=\"n\">sampleBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">array</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">CFDictionaryRef</span><span class=\"w\"> </span><span class=\"n\">dic</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">CFDictionaryRef</span><span class=\"p\">)</span><span class=\"n\">CFArrayGetValueAtIndex</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">dic</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u5224\u65ad\u5f53\u524d\u5e27\u662f\u5426\u4e3a\u5173\u952e\u5e27</span>\n<span class=\"w\">    </span><span class=\"kt\">BOOL</span><span class=\"w\"> </span><span class=\"n\">keyframe</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">CFDictionaryContainsKey</span><span class=\"p\">(</span><span class=\"n\">dic</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kCMSampleAttachmentKey_NotSync</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">HardwareVideoEncoder</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">videoEncoder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">HardwareVideoEncoder</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">refCon</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">/// \u8bfb\u53d6sps\u3001pps \u6570\u636e</span>\n<span class=\"w\">    </span><span class=\"n\">readSPSAndPPSData</span><span class=\"p\">(</span><span class=\"n\">videoEncoder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">keyframe</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">/// \u83b7\u53d6\u7f16\u7801\u540e\u7684\u6570\u636e</span>\n<span class=\"w\">    </span><span class=\"n\">readBlockBuffer</span><span class=\"p\">(</span><span class=\"n\">sampleBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">frameRef</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">keyframe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">videoEncoder</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h5 id=\"6-spspps\">6\u3001\u83b7\u53d6 sps\u3001pps \u6570\u636e</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">readSPSAndPPSData</span><span class=\"p\">(</span><span class=\"n\">HardwareVideoEncoder</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">videoEncoder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferRef</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">BOOL</span><span class=\"w\"> </span><span class=\"n\">keyframe</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">keyframe</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">videoEncoder</span><span class=\"o\">-&gt;</span><span class=\"n\">sps</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">/// \u683c\u5f0f\u4fe1\u606f</span>\n<span class=\"w\">        </span><span class=\"n\">CMFormatDescriptionRef</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferGetFormatDescription</span><span class=\"p\">(</span><span class=\"n\">sampleBuffer</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">/// \u83b7\u53d6 sps \u6570\u636e</span>\n<span class=\"w\">        </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">sparameterSetSize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sparameterSetCount</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">sparameterSet</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">statusCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMVideoFormatDescriptionGetH264ParameterSetAtIndex</span><span class=\"p\">(</span><span class=\"n\">format</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">sparameterSet</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">sparameterSetSize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">sparameterSetCount</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">statusCode</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">/// \u83b7\u53d6 pps \u6570\u636e</span>\n<span class=\"w\">            </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">pparameterSetSize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pparameterSetCount</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">pparameterSet</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">statusCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMVideoFormatDescriptionGetH264ParameterSetAtIndex</span><span class=\"p\">(</span><span class=\"n\">format</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">pparameterSet</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">pparameterSetSize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">pparameterSetCount</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">statusCode</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">videoEncoder</span><span class=\"o\">-&gt;</span><span class=\"n\">sps</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"n\">dataWithBytes</span><span class=\"o\">:</span><span class=\"n\">sparameterSet</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"o\">:</span><span class=\"n\">sparameterSetSize</span><span class=\"p\">];</span>\n<span class=\"w\">                </span><span class=\"n\">videoEncoder</span><span class=\"o\">-&gt;</span><span class=\"n\">pps</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"n\">dataWithBytes</span><span class=\"o\">:</span><span class=\"n\">pparameterSet</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"o\">:</span><span class=\"n\">pparameterSetSize</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h5 id=\"7\">7\u3001\u7f16\u7801\u540e\u7684\u5e27\u6570\u636e</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">/// \u83b7\u53d6\u7f16\u7801\u540e\u7684\u6570\u636e</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">readBlockBuffer</span><span class=\"p\">(</span><span class=\"n\">CMSampleBufferRef</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">frameRef</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">BOOL</span><span class=\"w\"> </span><span class=\"n\">keyframe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HardwareVideoEncoder</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">videoEncoder</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u5f53\u524d\u5e27\u65f6\u95f4</span>\n<span class=\"w\">    </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">timeStamp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[((</span><span class=\"k\">__bridge_transfer</span><span class=\"w\"> </span><span class=\"bp\">NSNumber</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">frameRef</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">longLongValue</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"n\">CMBlockBufferRef</span><span class=\"w\"> </span><span class=\"n\">dataBuffer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferGetDataBuffer</span><span class=\"p\">(</span><span class=\"n\">sampleBuffer</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">totalLength</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">dataPointer</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">statusCodeRet</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMBlockBufferGetDataPointer</span><span class=\"p\">(</span><span class=\"n\">dataBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">length</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">totalLength</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">dataPointer</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">statusCodeRet</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">bufferOffset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">AVCCHeaderLength</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u5faa\u73af\u83b7\u53d6nalu\u6570\u636e VAVC</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bufferOffset</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">totalLength</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">AVCCHeaderLength</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">NALUnitLength</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"c1\">/// \u8bfb\u53d6\u524d 4 \u4e2a\u5b57\u8282, \u8868\u793a nalu \u6570\u636e\u7684\u957f\u5ea6.</span>\n<span class=\"w\">            </span><span class=\"n\">memcpy</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">NALUnitLength</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dataPointer</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">bufferOffset</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AVCCHeaderLength</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">NALUnitLength</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CFSwapInt32BigToHost</span><span class=\"p\">(</span><span class=\"n\">NALUnitLength</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"n\">VideoDataFrame</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">videoFrame</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">VideoDataFrame</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"n\">videoFrame</span><span class=\"p\">.</span><span class=\"n\">timestamp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">timeStamp</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">videoFrame</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">initWithBytes</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"n\">dataPointer</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">bufferOffset</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">AVCCHeaderLength</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"o\">:</span><span class=\"n\">NALUnitLength</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"n\">videoFrame</span><span class=\"p\">.</span><span class=\"n\">isKeyFrame</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">keyframe</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">videoFrame</span><span class=\"p\">.</span><span class=\"n\">sps</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">videoEncoder</span><span class=\"o\">-&gt;</span><span class=\"n\">sps</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">videoFrame</span><span class=\"p\">.</span><span class=\"n\">pps</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">videoEncoder</span><span class=\"o\">-&gt;</span><span class=\"n\">pps</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">videoEncoder</span><span class=\"p\">.</span><span class=\"n\">delegate</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">videoEncoder</span><span class=\"p\">.</span><span class=\"n\">delegate</span><span class=\"w\"> </span><span class=\"n\">respondsToSelector</span><span class=\"o\">:</span><span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">videoEncoder</span><span class=\"o\">:</span><span class=\"n\">videoFrame</span><span class=\"o\">:</span><span class=\"p\">)])</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"p\">[</span><span class=\"n\">videoEncoder</span><span class=\"p\">.</span><span class=\"n\">delegate</span><span class=\"w\"> </span><span class=\"n\">videoEncoder</span><span class=\"o\">:</span><span class=\"n\">videoEncoder</span><span class=\"w\"> </span><span class=\"n\">videoFrame</span><span class=\"o\">:</span><span class=\"n\">videoFrame</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n\n<span class=\"w\">            </span><span class=\"n\">bufferOffset</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">AVCCHeaderLength</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">NALUnitLength</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h4 id=\"h264_2\">H.264 \u89e3\u7801</h4>\n<h5 id=\"1-start-code-nalu\">1\u3001\u6839\u636e Start Code \u89e3\u6790\u51fa NALU \u5757</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"n\">NS_ENUM</span><span class=\"p\">(</span><span class=\"n\">NSUInteger</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeState</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">/// \u9ed8\u8ba4\u5339\u914d\u72b6\u6001</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind1Zero</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">/// \u5339\u914d\u5230\u4e00\u4e2a 0</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2Zero</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">/// \u5339\u914d\u5230\u4e24\u4e2a 0</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2Zero</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">/// \u5339\u914d\u5230\u8d85\u8fc7\u4e24\u4e2a 0</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2ZeroAnd1One</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">/// \u5339\u914d\u5230 0x00 00 01</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2ZeroAnd1One</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"c1\">/// \u5339\u914d\u5230 0x00 00 00 01</span>\n<span class=\"p\">};</span>\n\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"n\">LHH264NALU</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nf\">nextRead</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">parsingBuffer</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">BOOL</span><span class=\"w\"> </span><span class=\"n\">findStartCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NO</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">LH264AnnexBFormatParserStartCodeState</span><span class=\"w\"> </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">parsingBuffer</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">parsingBuffer</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">_position</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind1Zero</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind1Zero</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2Zero</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2Zero</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2Zero</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2ZeroAnd1One</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2Zero</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"c1\">// \u592a\u591a0\u4e86\u5904\u7406\u4e0d\u4e86\u554a</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2ZeroAnd1One</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2ZeroAnd1One</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2ZeroAnd1One</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_isFirstStartCode</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">_isFirstStartCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NO</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">_nextFramePosition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"k\">continue</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"n\">findStartCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">YES</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">/// \u5929\u6daf\u6d77\u89d2</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">/// \u5206\u5272\u51fa\u6570\u636e\u5757</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">findStartCode</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFindMoreThan2ZeroAnd1One</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_nextFramePosition</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">/// 00 00 00 01</span>\n<span class=\"w\">            </span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">payloadData</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">parsingBuffer</span><span class=\"w\"> </span><span class=\"n\">subdataWithRange</span><span class=\"o\">:</span><span class=\"n\">NSMakeRange</span><span class=\"p\">(</span><span class=\"n\">_nextFramePosition</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_nextFramePosition</span><span class=\"p\">)];</span>\n<span class=\"w\">            </span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">outputData</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">payloadData</span><span class=\"w\"> </span><span class=\"n\">subdataWithRange</span><span class=\"o\">:</span><span class=\"n\">NSMakeRange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">payloadData</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)];</span>\n<span class=\"w\">            </span><span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;outputData: %@&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">outputData</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"n\">LHH264NALU</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">nalu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"n\">LHH264NALU</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">initWithData</span><span class=\"o\">:</span><span class=\"n\">outputData</span><span class=\"w\"> </span><span class=\"n\">formatType</span><span class=\"o\">:</span><span class=\"n\">LHH264NALUFormatTypeAnnexB</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"n\">findStartCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NO</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">_nextFramePosition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"w\"> </span><span class=\"n\">dropOldData</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">nalu</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateFind2ZeroAnd1One</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_nextFramePosition</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">// 00 00 01</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_position</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_nextFramePosition</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">payloadData</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">parsingBuffer</span><span class=\"w\"> </span><span class=\"n\">subdataWithRange</span><span class=\"o\">:</span><span class=\"n\">NSMakeRange</span><span class=\"p\">(</span><span class=\"n\">_nextFramePosition</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_nextFramePosition</span><span class=\"p\">)];</span>\n<span class=\"w\">                </span><span class=\"bp\">NSData</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">outputData</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">payloadData</span><span class=\"w\"> </span><span class=\"n\">subdataWithRange</span><span class=\"o\">:</span><span class=\"n\">NSMakeRange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">payloadData</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">)];</span>\n<span class=\"w\">                </span><span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;outputData: %@&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">outputData</span><span class=\"p\">);</span>\n\n<span class=\"w\">                </span><span class=\"n\">LHH264NALU</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">nalu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"n\">LHH264NALU</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">initWithData</span><span class=\"o\">:</span><span class=\"n\">outputData</span><span class=\"w\"> </span><span class=\"n\">formatType</span><span class=\"o\">:</span><span class=\"n\">LHH264NALUFormatTypeAnnexB</span><span class=\"p\">];</span>\n<span class=\"w\">                </span><span class=\"n\">findStartCode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NO</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">startCodeState</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">LH264AnnexBFormatParserStartCodeStateInit</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">_nextFramePosition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_position</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"w\"> </span><span class=\"n\">dropOldData</span><span class=\"p\">];</span>\n<span class=\"w\">                </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">nalu</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">/// \u90a3\u80fd\u600e\u4e48\u529e\u5462</span>\n<span class=\"w\">            </span><span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;\u90a3\u80fd\u600e\u4e48\u529e\u5462&quot;</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">/// \u90a3\u80fd\u600e\u4e48\u529e\u5462</span>\n<span class=\"w\">        </span><span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;\u90a3\u80fd\u600e\u4e48\u529e\u5462&quot;</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h5 id=\"2-sps-pps-cmformatdescriptionref\">2\u3001\u6839\u636e\u89e3\u6790\u51fa\u6765\u7684 sps \u548c pps \u6570\u636e\u521b\u5efa CMFormatDescriptionRef</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">parameterSets</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">spsData</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">ppsData</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">],</span>\n<span class=\"p\">};</span>\n\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">parameterSetSizes</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">spsData</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">ppsData</span><span class=\"p\">.</span><span class=\"n\">length</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">CMFormatDescriptionRef</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"p\">;</span>\n<span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMVideoFormatDescriptionCreateFromH264ParameterSets</span><span class=\"p\">(</span><span class=\"n\">kCFAllocatorDefault</span><span class=\"p\">,</span>\n<span class=\"w\">                                                                       </span><span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"w\">                                                                       </span><span class=\"n\">parameterSets</span><span class=\"p\">,</span>\n<span class=\"w\">                                                                       </span><span class=\"n\">parameterSetSizes</span><span class=\"p\">,</span>\n<span class=\"w\">                                                                       </span><span class=\"mi\">4</span><span class=\"p\">,</span>\n<span class=\"w\">                                                                       </span><span class=\"o\">&amp;</span><span class=\"n\">format</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_videoFormatDescription</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">CFRelease</span><span class=\"p\">(</span><span class=\"n\">_videoFormatDescription</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">videoFormatDescription</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">_videoFormatDescription</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h5 id=\"3-cmsamplebuffer\">3\u3001\u5c06\u7f16\u7801\u6570\u636e\u5c01\u88c5\u6210 CMSampleBuffer</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">CMBlockBufferRef</span><span class=\"w\"> </span><span class=\"n\">blockBuffer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span>\n<span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMBlockBufferCreateWithMemoryBlock</span><span class=\"p\">(</span><span class=\"n\">kCFAllocatorDefault</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"n\">kCFAllocatorNull</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"nb\">NULL</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">                                                      </span><span class=\"o\">&amp;</span><span class=\"n\">blockBuffer</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// skip this tag</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">CMSampleBufferRef</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">;</span>\n<span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">blockDataSizeArray</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">CMBlockBufferGetDataLength</span><span class=\"p\">(</span><span class=\"n\">blockBuffer</span><span class=\"p\">)};</span>\n<span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferCreateReady</span><span class=\"p\">(</span><span class=\"n\">kCFAllocatorDefault</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"n\">blockBuffer</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"n\">description</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"nb\">nil</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"n\">blockDataSizeArray</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"o\">&amp;</span><span class=\"n\">sampleBuffer</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<h5 id=\"4_1\">4\u3001\u521b\u5efa\u89e3\u7801\u5668</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">VTDecompressionOutputCallbackRecord</span><span class=\"w\"> </span><span class=\"n\">callbackRecord</span><span class=\"p\">;</span>\n<span class=\"n\">callbackRecord</span><span class=\"p\">.</span><span class=\"n\">decompressionOutputRefCon</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">_Nullable</span><span class=\"p\">)(</span><span class=\"nb\">self</span><span class=\"p\">);</span>\n<span class=\"n\">callbackRecord</span><span class=\"p\">.</span><span class=\"n\">decompressionOutputCallback</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">decompressionOutputCallback</span><span class=\"p\">;</span>\n\n<span class=\"c1\">/// \u89c6\u9891\u5e27\u5e8f\u5217\u89e3\u538b\u7684\u4f1a\u8bdd</span>\n<span class=\"n\">VTDecompressionSessionRef</span><span class=\"w\"> </span><span class=\"n\">_decompressionSession</span><span class=\"p\">;</span>\n<span class=\"n\">CFDictionaryRef</span><span class=\"w\"> </span><span class=\"n\">attributes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">CFDictionaryRef</span><span class=\"p\">)</span><span class=\"l\">@{</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"bp\">NSString</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">kCVPixelBufferPixelFormatTypeKey</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"l\">@(</span><span class=\"n\">kCVPixelFormatType_32BGRA</span><span class=\"l\">)}</span><span class=\"p\">;</span>\n<span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VTDecompressionSessionCreate</span><span class=\"p\">(</span><span class=\"n\">kCFAllocatorDefault</span><span class=\"p\">,</span>\n<span class=\"w\">                                                </span><span class=\"n\">_formatDescription</span><span class=\"p\">,</span>\n<span class=\"w\">                                                </span><span class=\"nb\">nil</span><span class=\"p\">,</span>\n<span class=\"w\">                                                </span><span class=\"n\">attributes</span><span class=\"p\">,</span>\n<span class=\"w\">                                                </span><span class=\"o\">&amp;</span><span class=\"n\">callbackRecord</span><span class=\"p\">,</span>\n<span class=\"w\">                                                </span><span class=\"o\">&amp;</span><span class=\"n\">_decompressionSession</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<h5 id=\"5_1\">5\u3001\u89e3\u7801</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">VTDecodeFrameFlags</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"n\">VTDecodeInfoFlags</span><span class=\"w\"> </span><span class=\"n\">flagOut</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"n\">VTDecompressionSessionDecodeFrame</span><span class=\"p\">(</span><span class=\"n\">_decompressionSession</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">flagOut</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<h5 id=\"6\">6\u3001\u89e3\u7801\u8f93\u51fa</h5>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">decompressionOutputCallback</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">decompressionOutputRefCon</span><span class=\"p\">,</span>\n<span class=\"w\">                                        </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">sourceFrameRefCon</span><span class=\"p\">,</span>\n<span class=\"w\">                                        </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"p\">,</span>\n<span class=\"w\">                                        </span><span class=\"n\">VTDecodeInfoFlags</span><span class=\"w\"> </span><span class=\"n\">infoFlags</span><span class=\"p\">,</span>\n<span class=\"w\">                                        </span><span class=\"n\">CVImageBufferRef</span><span class=\"w\"> </span><span class=\"n\">imageBuffer</span><span class=\"p\">,</span>\n<span class=\"w\">                                        </span><span class=\"n\">CMTime</span><span class=\"w\"> </span><span class=\"n\">presentationTimeStamp</span><span class=\"p\">,</span>\n<span class=\"w\">                                        </span><span class=\"n\">CMTime</span><span class=\"w\"> </span><span class=\"n\">presentationDuration</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">HardwareVideoDecodeWorker</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">__bridge</span><span class=\"w\"> </span><span class=\"n\">HardwareVideoDecodeWorker</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">decompressionOutputRefCon</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"n\">decodeSessionDidOuputWithStatus</span><span class=\"o\">:</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"n\">infoFlags</span><span class=\"o\">:</span><span class=\"n\">infoFlags</span><span class=\"w\"> </span><span class=\"n\">imageBuffer</span><span class=\"o\">:</span><span class=\"n\">imageBuffer</span><span class=\"w\"> </span><span class=\"n\">presentationTimeStamp</span><span class=\"o\">:</span><span class=\"n\">presentationTimeStamp</span><span class=\"w\"> </span><span class=\"n\">duration</span><span class=\"o\">:</span><span class=\"n\">presentationDuration</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"p\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">decodeSessionDidOuputWithStatus:</span><span class=\"p\">(</span><span class=\"n\">OSStatus</span><span class=\"p\">)</span><span class=\"nv\">status</span>\n<span class=\"w\">                              </span><span class=\"nl\">infoFlags</span><span class=\"p\">:(</span><span class=\"n\">VTDecodeInfoFlags</span><span class=\"p\">)</span><span class=\"nv\">infoFlags</span>\n<span class=\"w\">                            </span><span class=\"nl\">imageBuffer</span><span class=\"p\">:(</span><span class=\"n\">nullable</span><span class=\"w\"> </span><span class=\"n\">CVImageBufferRef</span><span class=\"p\">)</span><span class=\"nv\">imageBuffer</span>\n<span class=\"w\">                  </span><span class=\"nl\">presentationTimeStamp</span><span class=\"p\">:(</span><span class=\"n\">CMTime</span><span class=\"p\">)</span><span class=\"nv\">presentationTimeStamp</span>\n<span class=\"w\">                               </span><span class=\"nl\">duration</span><span class=\"p\">:(</span><span class=\"n\">CMTime</span><span class=\"p\">)</span><span class=\"nv\">duration</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">imageBuffer</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">OSStatus</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">CMSampleTimingInfo</span><span class=\"w\"> </span><span class=\"n\">timingInfo</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">timingInfo</span><span class=\"p\">.</span><span class=\"n\">duration</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">duration</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">timingInfo</span><span class=\"p\">.</span><span class=\"n\">presentationTimeStamp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">presentationTimeStamp</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">timingInfo</span><span class=\"p\">.</span><span class=\"n\">decodeTimeStamp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">kCMTimeInvalid</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">CMVideoFormatDescriptionRef</span><span class=\"w\"> </span><span class=\"n\">videoFormatDescription</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMVideoFormatDescriptionCreateForImageBuffer</span><span class=\"p\">(</span><span class=\"n\">kCFAllocatorDefault</span><span class=\"p\">,</span>\n<span class=\"w\">                                                       </span><span class=\"n\">imageBuffer</span><span class=\"p\">,</span>\n<span class=\"w\">                                                       </span><span class=\"o\">&amp;</span><span class=\"n\">videoFormatDescription</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">CMSampleBufferRef</span><span class=\"w\"> </span><span class=\"n\">sampleBuffer</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CMSampleBufferCreateForImageBuffer</span><span class=\"p\">(</span><span class=\"n\">kCFAllocatorDefault</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"n\">imageBuffer</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"nb\">true</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"nb\">nil</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"nb\">nil</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"n\">videoFormatDescription</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"o\">&amp;</span><span class=\"n\">timingInfo</span><span class=\"p\">,</span>\n<span class=\"w\">                                             </span><span class=\"o\">&amp;</span><span class=\"n\">sampleBuffer</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">CFRelease</span><span class=\"p\">(</span><span class=\"n\">videoFormatDescription</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">noErr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">sampleBuffer</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">nil</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">delegate</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">delegate</span><span class=\"w\"> </span><span class=\"n\">respondsToSelector</span><span class=\"o\">:</span><span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">videoDecoder</span><span class=\"o\">:</span><span class=\"n\">decodeSampleBuffer</span><span class=\"o\">:</span><span class=\"p\">)])</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"n\">delegate</span><span class=\"w\"> </span><span class=\"n\">videoDecoder</span><span class=\"o\">:</span><span class=\"nb\">self</span><span class=\"w\"> </span><span class=\"n\">decodeSampleBuffer</span><span class=\"o\">:</span><span class=\"n\">sampleBuffer</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>"}